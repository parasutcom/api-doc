{
  "swagger": "2.0",
  "info": {
    "version": "4.0.0",
    "title": "Paraşüt - API V4",
    "x-logo": {
      "url": "https://apidocs.parasut.com/logo.png",
      "backgroundColor": null
    },
    "description": "Bir önceki API (V1) dökümantasyonuna [bu bağlantı](https://api.parasut.com/docs) ile ulaşabilirsiniz\n\n# GİRİŞ\n\n## API Hakkında\n\nParaşüt API henüz beta aşamasındadır ve sadece belli sayıda kullanıcıya açıktır. Eğer beta test sürecine katılmak veya API hakkındaki görüşlerinizi bizimle paylaşmak isterseniz lütfen bizimle destek@parasut.com adresi üzerinden bağlantıya geçiniz.\n\nAPI'yi kullanarak Paraşüt veritabanına ulaşabilir ve kendi yazdığınız uygulamalar ile entegre edebilirsiniz. API vasıtasıyla Paraşüt Web arayüzü ile yapılan hemen her işlemi gerçekleştirebilirsiniz.\n\n\n- API geliştirmesinde çoğunlukla JSONAPI (http://jsonapi.org/) standartlarına uymaya çalıştık.\n\n- Dökümantasyon oluşturulmasında ise OpenAPI-Swagger 2.0 kullandık.\n\n- API hizmetimizin `BASE_URL`i `https://api.parasut.com` şeklindedir.\n\n- V4 endpointlerine ulaşmak için `https://api.parasut.com/v4` şeklinde kullanabilirsiniz.\n\n## Genel Bilgiler\n\n- API metodlarına erişmek için baz URL olarak `https://api.parasut.com/v4/firma_no` adresi kullanılır.\n  - Bu yapıda kullanılan `firma_no` parametresi bilgisine erişilmek istenin firmanın Paraşüt veritabanındaki kayıt numarasıdır.\n  - Örneğin 115 numaralı firmanın müşteri/tedarikçi listesine erişmek için `https://api.parasut.com/v4/115/contacts` adresi kullanılır.\n- İstekleri gönderirken `Content-Type` header'ı olarak `application/json` veya `application/vnd.api+json` göndermelisiniz.\n- Yeni bir kayıt oluştururken **ilgili** kaydın `ID` parametresini boş göndermeli veya hiç göndermemelisiniz.\n  - Örnek: Satış faturası oluştururken `data->id` boş olmalı, ama `relationships->contact->data->id` dolu olmalı, çünkü gönderdiğiniz müşterinizin ID'si daha önceden elinizde bulunmalıdır. Aynı şekilde `relationships->details->data` içerisinde tanımladığınız ID'ler de boş olmalı, çünkü henüz fatura kalemi yaratmadınız.\n- API endpointlerine ulaşmak için, aldığınız `access_token`'ı sorgulara `Authorization` header'ı olarak `Bearer access_token` şeklinde göndermelisiniz.\n- Dakikada 60 adet istek gönderebilirsiniz.\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->\n\nParaşüt API kimlik doğrulama için oAuth2 kullanmaktadır. Bu protokolü destekleyen istemci kütüphanelerini kullanarak oturum açabilir ve API'yi kullanabilirsiniz.\n\nGerekli CLIENT_ID, CLIENT_SECRET ve REDIRECT_URL bilgilerini almak için destek@parasut.com adresine mail atabilirsiniz.\n\nKimlik doğrulama işleminin başarılı olması durumunda bir adet kimlik jetonu (authentication token) ve bir adet de yenileme jetonu (refresh token) gönderilecektir. Kimlik jetonu 2 saat süreyle geçerlidir ve her istekte http başlık bilgilerinin içerisinde gönderilmelidir. Bu sürenin sonunda kimlik jetonu geçerliliğini yitirecektir ve yenileme jetonu kullanılarak tekrar üretilmesi gerekmektedir.\n\n## access_token almak:\n\naccess_token almanız için iki farklı seçenek bulunmaktadır.\n\nKullanım şeklinize bağlı olarak iki yöntemden birini tercih etmelisiniz.\n\n### 1. grant_type=authorization_code\n\nBu yöntemi kullanabilmek için öncelikle aşağıda belirtildiği gibi kullanıcıyı başarılı authentication işleminin ardından yönlendirmek istediğiniz `REDIRECT_URL`'i bize ulaşarak kayıt ettirmeniz gerekmektedir. `REDIRECT_URL` varsayılan olarak `urn:ietf:wg:oauth:2.0:oob` gelmektedir.\n\nSize özel bir REDIRECT_URL tanımlamak isterseniz destek@parasut.com adresine mail atabilirsiniz.\n\n1. Kullanıcıyı şu adrese yönlendirin:\n\n  ```\n  BASE_URL/oauth/authorize?client_id=CLIENT_ID&redirect_uri=REDIRECT_URL&response_type=code\n  ```\n\n2. Oturum açmışsa ve uygulamayı kabul ederse, kullanıcı sizin tanımladığınız REDIRECT_URL'e şu şekilde gelmesi gerekiyor:\n  `REDIRECT_URL?code=xxxxxxx`\n\n3. Burada size gelen \"code\" parametresi ile access token almalısınız.\n\n```bash\ncurl -F grant_type=authorization_code \\\n-F client_id=CLIENT_ID \\\n-F client_secret=CLIENT_SECRET \\\n-F code=RETURNED_CODE \\\n-F redirect_uri=REDIRECT_URL \\\n-X POST BASE_URL/oauth/token\n```\n\n### 2. grant_type=password\n\nE-posta ve şifre ile access_token almanız için aşağıdaki istekte size özel alanları doldurarak POST isteği atmanız gerekmektedir.\n\n```bash\ncurl -F grant_type=password \\\n-F client_id=CLIENT_ID \\\n-F client_secret=CLIENT_SECRET \\\n-F username=YOUREMAIL \\\n-F password=YOURPASSWORD \\\n-F redirect_uri=urn:ietf:wg:oauth:2.0:oob \\\n-X POST BASE_URL/oauth/token\n```\n\n### Sonuç\n\nHer iki yöntem sonucunda size aşağıdaki gibi bir sonuç dönecektir:\n\n```json\n{\n \"access_token\": \"XYZXYZXYZ\",\n \"token_type\": \"bearer\",\n \"expires_in\": 7200,\n \"refresh_token\": \"ABCABCABC\"\n}\n```\n\nBurada dönen `access_token`'ı API endpointlerine ulaşmak için gönderdiğiniz sorgulara `Authorization` header'ı olarak `Bearer XYZXYZXYZ` şeklinde eklemeniz gerekiyor.\n\n\n#### Refresh token ile yeni access_token alma örneği:\n\n`access_token` geçerliliğini 2 saat içerisinde yitirdiği için `refresh_token` ile yeni token alabilirsiniz.\n\n```bash\ncurl -F grant_type=refresh_token \\\n-F client_id=CLIENT_ID \\\n-F client_secret=CLIENT_SECRET \\\n-F refresh_token=REFRESH_TOKEN \\\n-X POST BASE_URL/oauth/token\n```\n\n`refresh_token` ile yeni bir `access_token` alırken aynı zamanda yeni bir `refresh_token` da almaktasınız. Dolayısıyla, daha sonra yeniden bir `access_token` alma isteğinizde size dönen yeni `refresh_token`ı kullanmalısınız.\n\n# SIK KULLANILAN İŞLEMLER\n\n## Kullanıcı Bilgisi\n\n`access_token` aldığınız kullanıcının genel bilgilerini görmek için [/me](/#operation/showMe) adresini kullanabilirsiniz.\n\n## Satış Faturası Oluşturma\n\nSatış faturası oluşturmak için bir müşteri (`contact`) `id`'si ve bir veya birden fazla ürün (`product`) `id`'sine ihtiyacınız vardır.\n\n### Müşteri\n\n##### Yeni bir müşteri ile\n\nEğer ihtiyaç duyduğunuz müşteri bilgisi henüz yoksa, öncelikle müşteri oluşturmanız gereklidir. Bunun için [Müşteri oluşturma](/#operation/createContact) endpoint'ini kullanmalısınız. Başarılı bir şekilde müşteri oluşturulursa size dönecek olan yanıt ihtiyaç duyacağınız müşteri `id`'sini içerir.\n\n##### Mevcut bir müşteri ile\n\nEğer daha önceden zaten oluşturduğunuz bir müşteri ile ilişkili bir satış faturası oluşturacaksanız öncelikle o müşterinin `id`'sini öğrenmeniz gerekir. Bunun için [Müşteri listesi](/#operation/listContacts) endpoint'ini kullanabilirsiniz. Müşteri listesi endpoint'i isim, e-posta, vergi numarası gibi çeşitli filtreleri destekler. Bunları kullanarak aradığınız müşteriyi bulabilirsiniz.\n\n### Ürün\n\n##### Yeni bir ürün ile\n\nEğer ihtiyaç duyduğunuz ürün bilgisi henüz yoksa, öncelikle ürün oluşturmanız gereklidir. Bunun için [Ürün oluşturma](/#operation/createProduct) endpoint'ini kullanmalısınız. Başarılı bir şekilde ürün oluşturulursa size dönecek olan yanıt ihtiyaç duyacağınız ürün `id`'sini içerir.\n\n##### Mevcut bir ürün ile\n\nEğer daha önceden oluşturduğunuz bir ürünü kullanarak bir satış faturası oluşturacaksanız öncelikle o ürünün `id`'sini öğrenmeniz gerekir. Bunun için [Ürün listesi](/#operation/listProducts) endpoint'ini kullanabilirsiniz. Ürün listesi endpoint'i isim, kod gibi çeşitli filtreleri destekler. Bunları kullanarak aradığınız ürünü bulabilirsiniz.\n\n---\n\nİhtiyaç duyduğunuz müşteri ve ürün `id`'lerini aldıktan sonra [Satış Faturası Oluşturma](/#operation/createSalesInvoice) endpoint'i ile satış faturası oluşturabilirsiniz. Endpoint'in tanımında sağ tarafta beklediğimiz veri şekli bulunmaktadır, aşağıdaki bilgileri verinin şekli ile kıyaslamak daha açıklayıcı olabilir.\n\nDikkat edilecek noktalar:\n* `relationships` altındaki `contact`'te bulunan `id` alanına müşteri `id`'sini girmeniz gereklidir.\n* `relationships` altındaki `details` kısmı bir listedir (`array`) ve fatura kalemlerini temsil eder. Bu listenin her elemanının ilişkili olduğu bir ürün vardır. Yani `details` altındaki her elemanın kendine ait bir `relationships` kısmı mevcuttur. Buradaki `product` `id` alanı üstteki ürün adımlarında elde ettiğiniz `id`'yi koymanız gereken yerdir.\n\n## Satış Faturasına Tahsilat Ekleme\n\n[Tahsilat ekleme](/#operation/paySalesInvoice) kısmındaki ilgili alanları doldurarak satış faturasına tahsilat ekleyebilirsiniz.\n\n## Satış Faturasının Tahsilatını Silme\n\nBir satış faturasının tahsilatını silmek aslında o tahsilatı oluşturan para akış işlemini silmek demektir. Bir işlemi silmeden önce o işlemin `id`'sine ihtiyacınız vardır.\n\nBir satış faturasına ait tahsilatları almak için [Satış faturası bilgilerini alma (show)](/#operation/showSalesInvoice) endpoint'ine istek atarken `?include=payments` parametresini de eklemelisiniz. Bu size satış faturası bilgilerine ilave olarak tahsilatları da verir.\n\nTahsilatlar ile birlikte o tahsilatları oluşturan işlemleri de almak için yine aynı endpoint'e `?include=payments.transaction` parametresini ekleyerek istek yapmanız gerekir. Bu size hem satış faturası bilgilerini, hem tahsilat bilgilerini hem de tahsilatı oluşturan işlemlerin bilgilerini verir.\n\n`?include=payments.transaction` parametresini kullanarak yaptığınız istek ile işlem (`transaction`) `id`'sini aldıktan sonra [işlem silme](/#operation/deleteTransaction) endpoint'inde bu `id`'yi kullanarak silme işlemini yapabilirsiniz.\n\n## Satış Faturası Resmileştirme\n\nOluşturduğunuz bir satış faturası varsa onu e-Arşiv veya e-Fatura olarak resmileştirmek için aşağıdakileri yapmanız gereklidir.\n\n1. Öncelikle müşterinizin e-Fatura kullanıcısı olup olmadığını öğrenmelisiniz. Bunun için müşterinizin e-Fatura gelen kutusu olup olmadığına bakmak gereklidir. [e-Fatura gelen kutusu](/#operation/listEInvoiceInboxes) endpoint'ine müşterinin vkn'sini kullanarak bir istek yaptığınızda eğer bir gelen kutusu olduğuna dair yanıt alıyorsanız müşteri e-Fatura kullanıcısıdır. Müşteri e-Fatura kullanıcısı ise resmileştirme için e-Fatura oluşturmak, e-Fatura kullanıcısı değilse e-Arşiv oluşturmak gereklidir.\n2. e-Fatura veya e-Arşiv oluşturma:\n   * Önceki adımda müşterinin e-Fatura kullanıcısı olduğu öğrenildiyse,  [e-Fatura oluşturma endpoint'i](/#operation/createEInvoice) kullanılarak e-Fatura oluşturmak gereklidir.\n   * Önceki adımda müşterinin e-Arşiv kullanıcısı olduğu öğrenildiyse,  [e-Arşiv oluşturma endpoint'i](/#operation/createEArchive) kullanılarak e-Arşiv oluşturmak gereklidir.\n\n   e-Fatura ve e-Arşiv oluşturma işlemi synchronous değildir. Yani istek arka planda yerine getirilir. Bu yüzden e-Fatura veya e-Arşiv oluşturma endpoint'leri cevap olarak oluşturma işleminin durumunu takip edebileceğiniz bir işlem `id`'si döner. Bu işlem `id`'sini [sorgulama](/#tag/TrackableJobs) endpoint'inde belirli aralıklarla kullanıp oluşturma işleminin durumunu takip etmeniz gerekmektedir. İşlem durumu ile ilgili aşağıdaki yanıtları alabilirsiniz:\n   * `status: \"pending\"` işlemin sırada olduğunu, henüz başlamadığını gösterir.\n   * `status: \"running\"` işlemin yapılmakta olduğunu ancak henüz sonuçlanmadığını gösterir.\n   * `status: \"error\"` işlemde bir hata olduğu anlamına gelir. Dönen yanıtta hata mesajını inceleyebilirsiniz.\n   * `status: \"done\"` işlemin başarılı bir şekilde sonuçlandığını gösterir.\n4. e-Fatura / e-Arşiv işleminin başarılı bir şekilde sonuçlandığını gördükten sonra e-Fatura / e-Arşiv bilgilerini almak için [Satış faturası bilgilerini alma (show)](/#operation/showSalesInvoice) endpoint'ine `?include=active_e_document` parametresi ile istek yapmanız gerekmektedir. Buradan sıradaki adımda ihtiyaç duyacağınız e-Fatura / e-Arşiv `id`'lerini ve başka bilgileri de alabilirsiniz.\n5. e-Fatura / e-Arşiv başarılı bir resmileştirildikten sonra müşterilerinize PDF olarak göndermek isteyebilirsiniz. Bunun için:\n   * e-Arşiv için, 4. adımda elde edeceğiniz e-Arşiv `id`'sini kullanarak [e-Arşiv PDF](/#operation/showEArchivePdf) endpoint'ine istek atabilirsiniz. Bu endpoint PDF henüz yoksa boş bir yanıt ile birlikte 204 döner. Yani 204 almayana kadar belirli aralıklarla bu endpoint'e istek yapmanız gerekmektedir. Geçerli yanıt aldığınızda size dönecek olan PDF URL 1 saat için geçerlidir. Bu yüzden bu linki direk olarak müşterinizle **paylaşmamalısınız**. İndirip müşterinize kendiniz göndermelisiniz.\n   * e-Arşiv için anlatılan senaryonun aynısı e-Fatura için de geçerlidir. Tek farklı kısım isteği yapacağınız endpoint'dir: [e-Fatura PDF](/#operation/showEInvoicePdf)\n\n## İrsaliye Oluşturma\n\nİrsaliye oluşturmak için bir müşteri/tedarikçi (`contact`) `id`'si ve bir veya birden fazla ürün (`product`) `id`'sine ihtiyacınız vardır.\n\n### Müşteri/Tedarikçi\n\n##### Yeni bir müşteri/tedarikçi ile\n\nEğer ihtiyaç duyduğunuz müşteri/tedarikçi bilgisi henüz yoksa, öncelikle müşteri/tedarikçi oluşturmanız gereklidir. Bunun için [Müşteri/Tedarikçi oluşturma](/#operation/createContact) endpoint'ini kullanmalısınız. Başarılı bir şekilde müşteri/tedarikçi oluşturulursa size dönecek olan yanıt ihtiyaç duyacağınız müşteri/tedarikçi `id`'sini içerir.\n\n##### Mevcut bir müşteri/tedarikçi ile\n\nEğer daha önceden zaten oluşturduğunuz bir müşteri/tedarikçi ile ilişkili bir irsaliye oluşturacaksanız öncelikle o müşteri/tedarikçinin `id`'sini öğrenmeniz gerekir. Bunun için [Müşteri/tedarikçi listesi](/#operation/listContacts) endpoint'ini kullanabilirsiniz. Müşteri/tedarikçi listesi endpoint'i isim, e-posta, vergi numarası gibi çeşitli filtreleri destekler. Bunları kullanarak aradığınız müşteri/tedarikçiyi bulabilirsiniz.\n\n### Ürün\n\n##### Yeni bir ürün ile\n\nEğer ihtiyaç duyduğunuz ürün bilgisi henüz yoksa, öncelikle ürün oluşturmanız gereklidir. Bunun için [Ürün oluşturma](/#operation/createProduct) endpoint'ini kullanmalısınız. Başarılı bir şekilde ürün oluşturulursa size dönecek olan yanıt ihtiyaç duyacağınız ürün `id`'sini içerir.\n\n##### Mevcut bir ürün ile\n\nEğer daha önceden oluşturduğunuz bir ürünü kullanarak bir irsaliye oluşturacaksanız öncelikle o ürünün `id`'sini öğrenmeniz gerekir. Bunun için [Ürün listesi](/#operation/listProducts) endpoint'ini kullanabilirsiniz. Ürün listesi endpoint'i isim, kod gibi çeşitli filtreleri destekler. Bunları kullanarak aradığınız ürünü bulabilirsiniz.\n\n---\n\nİhtiyaç duyduğunuz müşteri/tedarikçi ve ürün `id`'lerini aldıktan sonra [İrsaliye Oluşturma](/#operation/createShipmentDocument) endpoint'i ile irsaliye oluşturabilirsiniz. Endpoint'in tanımında sağ tarafta beklediğimiz veri şekli bulunmaktadır, aşağıdaki bilgileri verinin şekli ile kıyaslamak daha açıklayıcı olabilir.\n\nDikkat edilecek noktalar:\n* `relationships` altındaki `contact`'te bulunan `id` alanına müşteri/tedarikçi `id`'sini girmeniz gereklidir.\n* `relationships` altındaki `stock_movements` kısmı bir listedir (`array`) ve irsaliye kalemlerini temsil eder. Bu listenin her elemanının ilişkili olduğu bir ürün vardır. Yani `stock_movements` altındaki her elemanın kendine ait bir `relationships` kısmı mevcuttur. Buradaki `product` `id` alanı üstteki ürün adımlarında elde ettiğiniz `id`'yi koymanız gereken yerdir.\n"
  },
  "host": "api.parasut.com",
  "schemes": [
    "https"
  ],
  "basePath": "/v4",
  "consumes": [
    "application/vnd.api+json"
  ],
  "produces": [
    "application/vnd.api+json"
  ],
  "tags": [
    {
      "name": "Accounts",
      "x-displayName": "KASA VE BANKA"
    },
    {
      "name": "ApiHome",
      "x-displayName": "API HOME"
    },
    {
      "name": "BankFees",
      "x-displayName": "BANKA GİDERİ"
    },
    {
      "name": "Contacts",
      "x-displayName": "MÜŞTERİ / TEDARİKÇİ"
    },
    {
      "name": "EArchives",
      "x-displayName": "E-ARŞİV"
    },
    {
      "name": "EInvoiceInboxes",
      "x-displayName": "E-FATURA GELEN KUTUSU"
    },
    {
      "name": "EInvoices",
      "x-displayName": "E-FATURA"
    },
    {
      "name": "Employees",
      "x-displayName": "ÇALIŞAN"
    },
    {
      "name": "ItemCategories",
      "x-displayName": "KATEGORİ"
    },
    {
      "name": "Products",
      "x-displayName": "ÜRÜN"
    },
    {
      "name": "PurchaseBills",
      "x-displayName": "FİŞ / FATURA"
    },
    {
      "name": "Salaries",
      "x-displayName": "MAAŞ"
    },
    {
      "name": "SalesInvoices",
      "x-displayName": "SATIŞ FATURASI"
    },
    {
      "name": "SalesOffers",
      "x-displayName": "SalesOffers"
    },
    {
      "name": "ShipmentDocuments",
      "x-displayName": "İRSALİYE"
    },
    {
      "name": "StockMovements",
      "x-displayName": "STOK HAREKETİ"
    },
    {
      "name": "Tags",
      "x-displayName": "ETİKET"
    },
    {
      "name": "Taxes",
      "x-displayName": "VERGİ"
    },
    {
      "name": "TrackableJobs",
      "x-displayName": "TRACKABLE JOB"
    },
    {
      "name": "Transactions",
      "x-displayName": "İŞLEM"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Satışlar",
      "tags": [
        "SalesInvoices",
        "Contacts"
      ]
    },
    {
      "name": "Giderler",
      "tags": [
        "PurchaseBills",
        "BankFees",
        "Salaries",
        "Taxes",
        "Contacts",
        "Employees"
      ]
    },
    {
      "name": "Resmileştirme",
      "tags": [
        "EInvoiceInboxes",
        "EArchives",
        "EInvoices"
      ]
    },
    {
      "name": "Nakit",
      "tags": [
        "Accounts",
        "Transactions"
      ]
    },
    {
      "name": "Stok",
      "tags": [
        "Products",
        "ShipmentDocuments",
        "StockMovements"
      ]
    },
    {
      "name": "Ayarlar",
      "tags": [
        "ItemCategories",
        "Tags"
      ]
    },
    {
      "name": "Diğer",
      "tags": [
        "ApiHome",
        "TrackableJobs"
      ]
    }
  ],
  "paths": {
    "/{company_id}/accounts": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Accounts"
        ],
        "operationId": "listAccounts",
        "summary": "Index",
        "description": "",
        "parameters": [
          {
            "name": "filter[name]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[currency]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[bank_name]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[bank_branch]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[account_type]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[iban]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "in": "query",
            "description": "Sortable parameters - *Available: id, balance, balance_in_trl*",
            "default": "-id"
          },
          {
            "name": "page[number]",
            "type": "integer",
            "in": "query",
            "description": "Page Number",
            "default": 1
          },
          {
            "name": "page[size]",
            "type": "integer",
            "in": "query",
            "description": "Page Size",
            "default": 15,
            "minimum": 1,
            "maximum": 25
          }
        ],
        "responses": {
          "200": {
            "description": "Hesaplar",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Account"
                  }
                },
                "meta": {
                  "$ref": "#/definitions/ListMeta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Accounts"
        ],
        "operationId": "createAccount",
        "summary": "Create",
        "description": "",
        "parameters": [
          {
            "name": "account_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "accounts"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/AccountAttributes"
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Hesap",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Account"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/accounts/{id}": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Hesap ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Accounts"
        ],
        "operationId": "showAccount",
        "summary": "Show",
        "description": "",
        "responses": {
          "200": {
            "description": "Hesap",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Account"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Accounts"
        ],
        "operationId": "updateAccount",
        "summary": "Edit",
        "description": "",
        "parameters": [
          {
            "name": "account_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "accounts"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/AccountAttributes"
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Hesap",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Account"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Accounts"
        ],
        "operationId": "deleteAccount",
        "summary": "Delete",
        "description": "",
        "responses": {
          "204": {
            "description": "No content",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/accounts/{id}/transactions": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Hesap ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Accounts"
        ],
        "operationId": "listAccountTransactions",
        "summary": "Transactions",
        "description": "",
        "parameters": [
          {
            "name": "filter[date]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "in": "query",
            "description": "Sortable parameters - *Available: id*",
            "default": "id"
          },
          {
            "name": "page[number]",
            "type": "integer",
            "in": "query",
            "description": "Page Number",
            "default": 1
          },
          {
            "name": "page[size]",
            "type": "integer",
            "in": "query",
            "description": "Page Size",
            "default": 15,
            "minimum": 1,
            "maximum": 25
          },
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: debit_account, credit_account*"
          }
        ],
        "responses": {
          "200": {
            "description": "İşlemler",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Transaction"
                  }
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "accounts",
                          "payments"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                },
                "meta": {
                  "$ref": "#/definitions/ListMeta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/accounts/{id}/debit_transactions": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Kasa/Banka Hesabı ID",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "tags": [
          "Accounts"
        ],
        "operationId": "createDebitTransaction",
        "summary": "Debit Transaction",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: debit_account, credit_account, payments*"
          },
          {
            "name": "transaction_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "transactions"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/AccountDebitCreditTransactionFormAttributes"
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "İşlem",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Transaction"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "accounts",
                          "payments"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/accounts/{id}/credit_transactions": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Kasa/Banka Hesabı ID",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "tags": [
          "Accounts"
        ],
        "operationId": "createCreditTransaction",
        "summary": "Credit Transaction",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: debit_account, credit_account, payments*"
          },
          {
            "name": "transaction_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "transactions"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/AccountDebitCreditTransactionFormAttributes"
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "İşlem",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Transaction"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "accounts",
                          "payments"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/me": {
      "get": {
        "tags": [
          "ApiHome"
        ],
        "operationId": "showMe",
        "summary": "Show",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: user_roles, companies, profile*"
          }
        ],
        "responses": {
          "200": {
            "description": "Me",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Me"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "user_roles",
                          "companies",
                          "profiles"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/bank_fees": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "tags": [
          "BankFees"
        ],
        "operationId": "createBankFee",
        "summary": "Create",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, tags*"
          },
          {
            "name": "bank_fee_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "bank_fees"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/BankFeeAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "category": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "item_categories"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "tags"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Banka Gideri",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/BankFee"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "tags"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/bank_fees/{id}": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Banka Gideri ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "BankFees"
        ],
        "operationId": "showBankFee",
        "summary": "Show",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, tags*"
          }
        ],
        "responses": {
          "200": {
            "description": "Banka Gideri",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/BankFee"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "tags"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BankFees"
        ],
        "operationId": "updateBankFee",
        "summary": "Edit",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, tags*"
          },
          {
            "name": "bank_fee_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "bank_fees"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/BankFeeAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "category": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "item_categories"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "tags"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Banka Gideri",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/BankFee"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "tags"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BankFees"
        ],
        "operationId": "deleteBankFee",
        "summary": "Delete",
        "description": "",
        "responses": {
          "204": {
            "description": "No content",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/bank_fees/{id}/archive": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Banka Gideri ID",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "BankFees"
        ],
        "operationId": "archiveBankFee",
        "summary": "Archive",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, tags*"
          }
        ],
        "responses": {
          "200": {
            "description": "Banka Gideri",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/BankFee"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "tags"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/bank_fees/{id}/unarchive": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Banka Gideri ID",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "BankFees"
        ],
        "operationId": "unarchiveBankFee",
        "summary": "Unarchive",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, tags*"
          }
        ],
        "responses": {
          "200": {
            "description": "Banka Gideri",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/BankFee"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "tags"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/bank_fees/{id}/payments": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Banka Gideri ID",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "tags": [
          "BankFees"
        ],
        "operationId": "payBankFee",
        "summary": "Pay",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: payable, transaction*"
          },
          {
            "name": "payment_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "payments"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/PaymentFormAttributes"
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Ödeme",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Payment"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "sales_invoices",
                          "purchase_bills",
                          "taxes",
                          "bank_fees",
                          "salaries",
                          "checks",
                          "transactions"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/contacts": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Contacts"
        ],
        "operationId": "listContacts",
        "summary": "Index",
        "description": "",
        "parameters": [
          {
            "name": "filter[name]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[email]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[tax_number]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[tax_office]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[city]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "in": "query",
            "description": "Sortable parameters - *Available: id, balance, name, email*",
            "default": "-balance"
          },
          {
            "name": "page[number]",
            "type": "integer",
            "in": "query",
            "description": "Page Number",
            "default": 1
          },
          {
            "name": "page[size]",
            "type": "integer",
            "in": "query",
            "description": "Page Size",
            "default": 15,
            "minimum": 1,
            "maximum": 25
          },
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, contact_portal, contact_people*"
          }
        ],
        "responses": {
          "200": {
            "description": "Müşteriler/Tedarikçiler",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Contact"
                  }
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "contact_portals",
                          "contact_people"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                },
                "meta": {
                  "$ref": "#/definitions/ListMeta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "operationId": "createContact",
        "summary": "Create",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, contact_portal, contact_people*"
          },
          {
            "name": "contact_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "contacts"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/ContactAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "category": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "item_categories"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "contact_people": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "contact_people"
                                    ]
                                  },
                                  "attributes": {
                                    "$ref": "#/definitions/ContactPersonAttributes"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Müşteri/Tedarikçi",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Contact"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "contact_portals",
                          "contact_people"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/contacts/{id}": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Müşteri/Tedarikçi ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Contacts"
        ],
        "operationId": "showContact",
        "summary": "Show",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, contact_portal, contact_people*"
          }
        ],
        "responses": {
          "200": {
            "description": "Müşteri/Tedarikçi",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Contact"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "contact_portals",
                          "contact_people"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "operationId": "updateContact",
        "summary": "Edit",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, contact_portal, contact_people*"
          },
          {
            "name": "contact_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "contacts"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/ContactAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "category": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "item_categories"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "contact_people": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "contact_people"
                                    ]
                                  },
                                  "attributes": {
                                    "$ref": "#/definitions/ContactPersonAttributes"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Müşteri/Tedarikçi",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Contact"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "contact_portals",
                          "contact_people"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "operationId": "deleteContact",
        "summary": "Delete",
        "description": "",
        "responses": {
          "204": {
            "description": "No content",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/contacts/{id}/contact_debit_transactions": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Müşteri/Tedarikçi ID",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "tags": [
          "Contacts"
        ],
        "operationId": "collectFromContact",
        "summary": "Tahsilat",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: debit_account, credit_account, payments*"
          },
          {
            "name": "transaction_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "transactions"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/ContactCollectionFormAttributes"
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "İşlem",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Transaction"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "accounts",
                          "payments"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/contacts/{id}/contact_credit_transactions": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Müşteri/Tedarikçi ID",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "tags": [
          "Contacts"
        ],
        "operationId": "payToContact",
        "summary": "Ödeme",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: debit_account, credit_account, payments*"
          },
          {
            "name": "transaction_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "transactions"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/ContactPaymentFormAttributes"
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "İşlem",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Transaction"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "accounts",
                          "payments"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/e_archives": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "tags": [
          "EArchives"
        ],
        "operationId": "createEArchive",
        "summary": "Create",
        "description": "",
        "parameters": [
          {
            "name": "e_archive_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "e_archives"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/EArchiveFormAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "sales_invoice": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "sales_invoices"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Trackable Job",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/TrackableJob"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/e_archives/{id}": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "EArchive ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "EArchives"
        ],
        "operationId": "showEArchive",
        "summary": "Show",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: sales_invoice*"
          }
        ],
        "responses": {
          "200": {
            "description": "e-Arşiv",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/EArchive"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "sales_invoices"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/e_archives/{id}/pdf": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "EArchive ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "EArchives"
        ],
        "operationId": "showEArchivePdf",
        "summary": "Show PDF",
        "description": "",
        "responses": {
          "200": {
            "description": "e-Arşiv PDF",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/EDocumentPdf"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/e_invoice_inboxes": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "EInvoiceInboxes"
        ],
        "operationId": "listEInvoiceInboxes",
        "summary": "Index",
        "description": "",
        "parameters": [
          {
            "name": "filter[vkn]",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "page[number]",
            "type": "integer",
            "in": "query",
            "description": "Page Number",
            "default": 1
          },
          {
            "name": "page[size]",
            "type": "integer",
            "in": "query",
            "description": "Page Size",
            "default": 15,
            "minimum": 1,
            "maximum": 25
          }
        ],
        "responses": {
          "200": {
            "description": "E-fatura posta kutuları",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EInvoiceInbox"
                  }
                },
                "meta": {
                  "$ref": "#/definitions/ListMeta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/e_invoices": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "tags": [
          "EInvoices"
        ],
        "operationId": "createEInvoice",
        "summary": "Create",
        "description": "",
        "parameters": [
          {
            "name": "e_invoice_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "e_invoices"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/EInvoiceFormAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "invoice": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "sales_invoices"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Trackable Job",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/TrackableJob"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/e_invoices/{id}": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "EInvoice ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "EInvoices"
        ],
        "operationId": "showEInvoice",
        "summary": "Show",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: invoice*"
          }
        ],
        "responses": {
          "200": {
            "description": "e-Fatura",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/EInvoice"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "sales_invoices",
                          "purchase_bills"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/e_invoices/{id}/pdf": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "EInvoice ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "EInvoices"
        ],
        "operationId": "showEInvoicePdf",
        "summary": "Show PDF",
        "description": "",
        "responses": {
          "200": {
            "description": "e-Fatura PDF",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/EDocumentPdf"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/employees": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Employees"
        ],
        "operationId": "listEmployees",
        "summary": "Index",
        "description": "",
        "parameters": [
          {
            "name": "filter[name]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[email]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "in": "query",
            "description": "Sortable parameters - *Available: id, balance, name, email*",
            "default": "-balance"
          },
          {
            "name": "page[number]",
            "type": "integer",
            "in": "query",
            "description": "Page Number",
            "default": 1
          },
          {
            "name": "page[size]",
            "type": "integer",
            "in": "query",
            "description": "Page Size",
            "default": 15,
            "minimum": 1,
            "maximum": 25
          },
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, managed_by_user, managed_by_user_role*"
          }
        ],
        "responses": {
          "200": {
            "description": "Çalışanlar",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Employee"
                  }
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "users",
                          "user_roles"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                },
                "meta": {
                  "$ref": "#/definitions/ListMeta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Employees"
        ],
        "operationId": "createEmployee",
        "summary": "Create",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, managed_by_user, managed_by_user_role*"
          },
          {
            "name": "employee_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "employees"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/EmployeeAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "category": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "item_categories"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Çalışan",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Employee"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "users",
                          "user_roles"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/employees/{id}": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Çalışan ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Employees"
        ],
        "operationId": "showEmployee",
        "summary": "Show",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, managed_by_user, managed_by_user_role*"
          }
        ],
        "responses": {
          "200": {
            "description": "Çalışan",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Employee"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "users",
                          "user_roles"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Employees"
        ],
        "operationId": "updateEmployee",
        "summary": "Edit",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, managed_by_user, managed_by_user_role*"
          },
          {
            "name": "employee_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "employees"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/EmployeeAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "category": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "item_categories"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Çalışan",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Employee"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "users",
                          "user_roles"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Employees"
        ],
        "operationId": "deleteEmployee",
        "summary": "Delete",
        "description": "",
        "responses": {
          "204": {
            "description": "No content",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/employees/{id}/archive": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Çalışan ID",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "Employees"
        ],
        "operationId": "archiveEmployee",
        "summary": "Archive",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, managed_by_user, managed_by_user_role*"
          }
        ],
        "responses": {
          "200": {
            "description": "Çalışan",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Employee"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "users",
                          "user_roles"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/employees/{id}/unarchive": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Çalışan ID",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "Employees"
        ],
        "operationId": "unarchiveEmployee",
        "summary": "Unarchive",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, managed_by_user, managed_by_user_role*"
          }
        ],
        "responses": {
          "200": {
            "description": "Çalışan",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Employee"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "users",
                          "user_roles"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/item_categories": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "ItemCategories"
        ],
        "operationId": "listItemCategories",
        "summary": "Index",
        "description": "",
        "parameters": [
          {
            "name": "filter[name]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[category_type]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "in": "query",
            "description": "Sortable parameters - *Available: id, name, category_type*",
            "default": "id"
          },
          {
            "name": "page[number]",
            "type": "integer",
            "in": "query",
            "description": "Page Number",
            "default": 1
          },
          {
            "name": "page[size]",
            "type": "integer",
            "in": "query",
            "description": "Page Size",
            "default": 15,
            "minimum": 1,
            "maximum": 25
          },
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: parent_category, subcategories*"
          }
        ],
        "responses": {
          "200": {
            "description": "Kategoriler",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ItemCategory"
                  }
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                },
                "meta": {
                  "$ref": "#/definitions/ListMeta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ItemCategories"
        ],
        "operationId": "createItemCategory",
        "summary": "Create",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: parent_category, subcategories*"
          },
          {
            "name": "item_category_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "item_categories"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/ItemCategoryAttributes"
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Kategori",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/ItemCategory"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/item_categories/{id}": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Kategori ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "ItemCategories"
        ],
        "operationId": "showItemCategory",
        "summary": "Kategori bilgisini gösterir.",
        "description": "Ayrıntısını görmek istediğiniz kategorinin id'sini göndererek gerekli bilgilere ulaşabilirsiniz.",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: parent_category, subcategories*"
          }
        ],
        "responses": {
          "200": {
            "description": "Kategori",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/ItemCategory"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ItemCategories"
        ],
        "operationId": "updateItemCategory",
        "summary": "Edit",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: parent_category, subcategories*"
          },
          {
            "name": "item_category_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "item_categories"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/ItemCategoryAttributes"
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Kategori",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/ItemCategory"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemCategories"
        ],
        "operationId": "deleteItemCategory",
        "summary": "Delete",
        "description": "",
        "responses": {
          "204": {
            "description": "No content",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/products": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "listProducts",
        "summary": "Index",
        "description": "",
        "parameters": [
          {
            "name": "filter[name]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[code]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "in": "query",
            "description": "Sortable parameters - *Available: id, name*",
            "default": "-id"
          },
          {
            "name": "page[number]",
            "type": "integer",
            "in": "query",
            "description": "Page Number",
            "default": 1
          },
          {
            "name": "page[size]",
            "type": "integer",
            "in": "query",
            "description": "Page Size",
            "default": 15,
            "minimum": 1,
            "maximum": 25
          },
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category*"
          }
        ],
        "responses": {
          "200": {
            "description": "Ürünler",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Product"
                  }
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                },
                "meta": {
                  "$ref": "#/definitions/ListMeta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "createProduct",
        "summary": "Create",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category*"
          },
          {
            "name": "product_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "products"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/ProductAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "category": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "item_categories"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Ürün",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Product"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/products/{id}": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Ürün ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "showProduct",
        "summary": "Show",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category*"
          }
        ],
        "responses": {
          "200": {
            "description": "Ürün",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Product"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "operationId": "updateProduct",
        "summary": "Edit",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category*"
          },
          {
            "name": "product_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "products"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/ProductAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "category": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "item_categories"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ürün",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Product"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "operationId": "deleteProduct",
        "summary": "Delete",
        "description": "",
        "responses": {
          "204": {
            "description": "No content",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/purchase_bills": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "PurchaseBills"
        ],
        "operationId": "listPurchaseBills",
        "summary": "Index",
        "description": "",
        "parameters": [
          {
            "name": "filter[issue_date]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[due_date]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[spender_id]",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "in": "query",
            "description": "Sortable parameters - *Available: id, issue_date, due_date, remaining, remaining_in_trl*",
            "default": "id"
          },
          {
            "name": "page[number]",
            "type": "integer",
            "in": "query",
            "description": "Page Number",
            "default": 1
          },
          {
            "name": "page[size]",
            "type": "integer",
            "in": "query",
            "description": "Page Size",
            "default": 15,
            "minimum": 1,
            "maximum": 25
          },
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, spender, details, details.product, payments, payments.transaction, tags, recurrence_plan, active_e_document, pay_to*"
          }
        ],
        "responses": {
          "200": {
            "description": "Faturalar",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PurchaseBill"
                  }
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "employees",
                          "contacts",
                          "purchase_bill_details",
                          "payments",
                          "tags",
                          "recurrence_plans",
                          "e_invoices"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                },
                "meta": {
                  "$ref": "#/definitions/ListMeta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/purchase_bills#basic": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "tags": [
          "PurchaseBills"
        ],
        "operationId": "createPurchaseBillBasic",
        "summary": "Create Basic PurchaseBill",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, spender, details, details.product, payments, payments.transaction, tags, recurrence_plan, active_e_document, pay_to*"
          },
          {
            "name": "purchase_bill_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "purchase_bills"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/PurchaseBillBasicFormAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "supplier": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "contacts"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "paid_by_employee": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "employees"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "category": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "item_categories"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "tags"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Fatura",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/PurchaseBill"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "employees",
                          "contacts",
                          "purchase_bill_details",
                          "payments",
                          "tags",
                          "recurrence_plans",
                          "e_invoices"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/purchase_bills#detailed": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "tags": [
          "PurchaseBills"
        ],
        "operationId": "createPurchaseBillDetailed",
        "summary": "Create Detailed PurchaseBill",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, spender, details, details.product, payments, payments.transaction, tags, recurrence_plan, active_e_document, pay_to*"
          },
          {
            "name": "purchase_bill_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "purchase_bills"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/PurchaseBillDetailedFormAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "details": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "purchase_bill_details"
                                    ]
                                  },
                                  "attributes": {
                                    "$ref": "#/definitions/PurchaseBillDetailAttributes"
                                  },
                                  "relationships": {
                                    "type": "object",
                                    "properties": {
                                      "product": {
                                        "type": "object",
                                        "properties": {
                                          "data": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "maxLength": 255
                                              },
                                              "type": {
                                                "type": "string",
                                                "maxLength": 255,
                                                "description": "Type of the resource",
                                                "enum": [
                                                  "products"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "supplier": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "contacts"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "paid_by_employee": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "employees"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "category": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "item_categories"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "tags"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Fatura",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/PurchaseBill"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "employees",
                          "contacts",
                          "purchase_bill_details",
                          "payments",
                          "tags",
                          "recurrence_plans",
                          "e_invoices"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/purchase_bills/{id}": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Fatura ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "PurchaseBills"
        ],
        "operationId": "showPurchaseBill",
        "summary": "Show",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, spender, details, details.product, payments, payments.transaction, tags, recurrence_plan, active_e_document, pay_to*"
          }
        ],
        "responses": {
          "200": {
            "description": "Fatura",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/PurchaseBill"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "employees",
                          "contacts",
                          "purchase_bill_details",
                          "payments",
                          "tags",
                          "recurrence_plans",
                          "e_invoices"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PurchaseBills"
        ],
        "operationId": "deletePurchaseBill",
        "summary": "Delete",
        "description": "",
        "responses": {
          "204": {
            "description": "No content",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/purchase_bills/{id}#basic": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Fatura ID",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "tags": [
          "PurchaseBills"
        ],
        "operationId": "updatePurchaseBillBasic",
        "summary": "Edit Basic PurchaseBill",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, spender, details, details.product, payments, payments.transaction, tags, recurrence_plan, active_e_document, pay_to*"
          },
          {
            "name": "purchase_bill_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "purchase_bills"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/PurchaseBillBasicFormAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "supplier": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "contacts"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "paid_by_employee": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "employees"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "category": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "item_categories"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "tags"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Fatura",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/PurchaseBill"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "employees",
                          "contacts",
                          "purchase_bill_details",
                          "payments",
                          "tags",
                          "recurrence_plans",
                          "e_invoices"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/purchase_bills/{id}#detailed": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Fatura ID",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "tags": [
          "PurchaseBills"
        ],
        "operationId": "updatePurchaseBillDetailed",
        "summary": "Edit Detailed PurchaseBill",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, spender, details, details.product, payments, payments.transaction, tags, recurrence_plan, active_e_document, pay_to*"
          },
          {
            "name": "purchase_bill_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "purchase_bills"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/PurchaseBillDetailedFormAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "details": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "purchase_bill_details"
                                    ]
                                  },
                                  "attributes": {
                                    "$ref": "#/definitions/PurchaseBillDetailAttributes"
                                  },
                                  "relationships": {
                                    "type": "object",
                                    "properties": {
                                      "product": {
                                        "type": "object",
                                        "properties": {
                                          "data": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "maxLength": 255
                                              },
                                              "type": {
                                                "type": "string",
                                                "maxLength": 255,
                                                "description": "Type of the resource",
                                                "enum": [
                                                  "products"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "supplier": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "contacts"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "paid_by_employee": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "employees"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "category": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "item_categories"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "tags"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Fatura",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/PurchaseBill"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "employees",
                          "contacts",
                          "purchase_bill_details",
                          "payments",
                          "tags",
                          "recurrence_plans",
                          "e_invoices"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/purchase_bills/{id}/payments": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Fatura ID",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "tags": [
          "PurchaseBills"
        ],
        "operationId": "payPurchaseBill",
        "summary": "Pay",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: payable, transaction*"
          },
          {
            "name": "payment_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "payments"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/PaymentFormAttributes"
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Ödeme",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Payment"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "sales_invoices",
                          "purchase_bills",
                          "taxes",
                          "bank_fees",
                          "salaries",
                          "checks",
                          "transactions"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/purchase_bills/{id}/cancel": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Fatura ID",
          "in": "path",
          "required": true
        }
      ],
      "delete": {
        "tags": [
          "PurchaseBills"
        ],
        "operationId": "cancelPurchaseBill",
        "summary": "Cancel",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, spender, details, details.product, payments, payments.transaction, tags, recurrence_plan, active_e_document, pay_to*"
          }
        ],
        "responses": {
          "200": {
            "description": "Fatura",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/PurchaseBill"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "employees",
                          "contacts",
                          "purchase_bill_details",
                          "payments",
                          "tags",
                          "recurrence_plans",
                          "e_invoices"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/purchase_bills/{id}/recover": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Fatura ID",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "PurchaseBills"
        ],
        "operationId": "recoverPurchaseBill",
        "summary": "Recover",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, spender, details, details.product, payments, payments.transaction, tags, recurrence_plan, active_e_document, pay_to*"
          }
        ],
        "responses": {
          "200": {
            "description": "Fatura",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/PurchaseBill"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "employees",
                          "contacts",
                          "purchase_bill_details",
                          "payments",
                          "tags",
                          "recurrence_plans",
                          "e_invoices"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/purchase_bills/{id}/archive": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Fatura ID",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "PurchaseBills"
        ],
        "operationId": "archivePurchaseBill",
        "summary": "Archive",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, spender, details, details.product, payments, payments.transaction, tags, recurrence_plan, active_e_document, pay_to*"
          }
        ],
        "responses": {
          "200": {
            "description": "Fatura",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/PurchaseBill"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "employees",
                          "contacts",
                          "purchase_bill_details",
                          "payments",
                          "tags",
                          "recurrence_plans",
                          "e_invoices"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/purchase_bills/{id}/unarchive": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Fatura ID",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "PurchaseBills"
        ],
        "operationId": "unarchivePurchaseBill",
        "summary": "Unarchive",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, spender, details, details.product, payments, payments.transaction, tags, recurrence_plan, active_e_document, pay_to*"
          }
        ],
        "responses": {
          "200": {
            "description": "Fatura",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/PurchaseBill"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "employees",
                          "contacts",
                          "purchase_bill_details",
                          "payments",
                          "tags",
                          "recurrence_plans",
                          "e_invoices"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/salaries": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Salaries"
        ],
        "operationId": "listSalaries",
        "summary": "Index",
        "description": "",
        "parameters": [
          {
            "name": "filter[due_date]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[issue_date]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[currency]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[remaining]",
            "type": "number",
            "in": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "in": "query",
            "description": "Sortable parameters - *Available: id, issue_date, due_date, remaining, description, net_total*",
            "default": "id"
          },
          {
            "name": "page[number]",
            "type": "integer",
            "in": "query",
            "description": "Page Number",
            "default": 1
          },
          {
            "name": "page[size]",
            "type": "integer",
            "in": "query",
            "description": "Page Size",
            "default": 15,
            "minimum": 1,
            "maximum": 25
          },
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, tags, payments, activities, employee*"
          }
        ],
        "responses": {
          "200": {
            "description": "Maaşlar",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Salary"
                  }
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "employees",
                          "item_categories",
                          "tags"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                },
                "meta": {
                  "$ref": "#/definitions/ListMeta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Salaries"
        ],
        "operationId": "createSalary",
        "summary": "Create",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: employee, category, tags*"
          },
          {
            "name": "salary_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "salaries"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/SalaryAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "employee": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "employees"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "category": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "item_categories"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "tags"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Maaş",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Salary"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "employees",
                          "item_categories",
                          "tags"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/salaries/{id}": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Maaş ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Salaries"
        ],
        "operationId": "showSalary",
        "summary": "Show",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: employee, category, tags*"
          }
        ],
        "responses": {
          "200": {
            "description": "Maaş",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Salary"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "employees",
                          "item_categories",
                          "tags"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Salaries"
        ],
        "operationId": "updateSalary",
        "summary": "Edit",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: employee, category, tags*"
          },
          {
            "name": "salary_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "salaries"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/SalaryAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "employee": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "employees"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "category": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "item_categories"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "tags"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Maaş",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Salary"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "employees",
                          "item_categories",
                          "tags"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Salaries"
        ],
        "operationId": "deleteSalary",
        "summary": "Delete",
        "description": "",
        "responses": {
          "204": {
            "description": "No content",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/salaries/{id}/archive": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Maaş ID",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "Salaries"
        ],
        "operationId": "archiveSalary",
        "summary": "Archive",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: employee, category, tags*"
          }
        ],
        "responses": {
          "200": {
            "description": "Maaş",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Salary"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "employees",
                          "item_categories",
                          "tags"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/salaries/{id}/unarchive": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Maaş ID",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "Salaries"
        ],
        "operationId": "unarchiveSalary",
        "summary": "Unarchive",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: employee, category, tags*"
          }
        ],
        "responses": {
          "200": {
            "description": "Maaş",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Salary"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "employees",
                          "item_categories",
                          "tags"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/salaries/{id}/payments": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Maaş ID",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "tags": [
          "Salaries"
        ],
        "operationId": "paySalary",
        "summary": "Pay",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: payable, transaction*"
          },
          {
            "name": "payment_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "payments"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/PaymentFormAttributes"
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Ödeme",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Payment"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "sales_invoices",
                          "purchase_bills",
                          "taxes",
                          "bank_fees",
                          "salaries",
                          "checks",
                          "transactions"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/sales_invoices": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "SalesInvoices"
        ],
        "operationId": "listSalesInvoices",
        "summary": "Index",
        "description": "",
        "parameters": [
          {
            "name": "filter[issue_date]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[due_date]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[contact_id]",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "filter[invoice_id]",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "filter[invoice_series]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "in": "query",
            "description": "Sortable parameters - *Available: id, issue_date, due_date, remaining, remaining_in_trl, description, net_total*",
            "default": "id"
          },
          {
            "name": "page[number]",
            "type": "integer",
            "in": "query",
            "description": "Page Number",
            "default": 1
          },
          {
            "name": "page[size]",
            "type": "integer",
            "in": "query",
            "description": "Page Size",
            "default": 15,
            "minimum": 1,
            "maximum": 25
          },
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, contact, details, details.product, payments, payments.transaction, tags, sharings, recurrence_plan, active_e_document*"
          }
        ],
        "responses": {
          "200": {
            "description": "Satış faturaları",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SalesInvoice"
                  }
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "contacts",
                          "sales_invoice_details",
                          "payments",
                          "tags",
                          "sales_offers",
                          "sharings",
                          "recurrence_plans",
                          "e_archives",
                          "e_invoices"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                },
                "meta": {
                  "$ref": "#/definitions/ListMeta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SalesInvoices"
        ],
        "operationId": "createSalesInvoice",
        "summary": "Create",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, contact, details, details.product, payments, payments.transaction, tags, sharings, recurrence_plan, active_e_document*"
          },
          {
            "name": "sales_invoice_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "sales_invoices"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/SalesInvoiceAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "details": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "sales_invoice_details"
                                    ]
                                  },
                                  "attributes": {
                                    "$ref": "#/definitions/SalesInvoiceDetailAttributes"
                                  },
                                  "relationships": {
                                    "type": "object",
                                    "properties": {
                                      "product": {
                                        "type": "object",
                                        "properties": {
                                          "data": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "maxLength": 255
                                              },
                                              "type": {
                                                "type": "string",
                                                "maxLength": 255,
                                                "description": "Type of the resource",
                                                "enum": [
                                                  "products"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "contact": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "contacts"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "category": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "item_categories"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "tags"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        },
                        "sales_offer": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "sales_offers"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Fatura",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/SalesInvoice"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "contacts",
                          "sales_invoice_details",
                          "payments",
                          "tags",
                          "sales_offers",
                          "sharings",
                          "recurrence_plans",
                          "e_archives",
                          "e_invoices"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/sales_invoices/{id}": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Fatura ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "SalesInvoices"
        ],
        "operationId": "showSalesInvoice",
        "summary": "Show",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, contact, details, details.product, payments, payments.transaction, tags, sharings, recurrence_plan, active_e_document*"
          }
        ],
        "responses": {
          "200": {
            "description": "Fatura",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/SalesInvoice"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "contacts",
                          "sales_invoice_details",
                          "payments",
                          "tags",
                          "sales_offers",
                          "sharings",
                          "recurrence_plans",
                          "e_archives",
                          "e_invoices"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SalesInvoices"
        ],
        "operationId": "updateSalesInvoice",
        "summary": "Edit",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, contact, details, details.product, payments, payments.transaction, tags, sharings, recurrence_plan, active_e_document*"
          },
          {
            "name": "sales_invoice_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "sales_invoices"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/SalesInvoiceAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "details": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "sales_invoice_details"
                                    ]
                                  },
                                  "attributes": {
                                    "$ref": "#/definitions/SalesInvoiceDetailAttributes"
                                  },
                                  "relationships": {
                                    "type": "object",
                                    "properties": {
                                      "product": {
                                        "type": "object",
                                        "properties": {
                                          "data": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "maxLength": 255
                                              },
                                              "type": {
                                                "type": "string",
                                                "maxLength": 255,
                                                "description": "Type of the resource",
                                                "enum": [
                                                  "products"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "contact": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "contacts"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "category": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "item_categories"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "tags"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        },
                        "sales_offer": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "sales_offers"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Fatura",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/SalesInvoice"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "contacts",
                          "sales_invoice_details",
                          "payments",
                          "tags",
                          "sales_offers",
                          "sharings",
                          "recurrence_plans",
                          "e_archives",
                          "e_invoices"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SalesInvoices"
        ],
        "operationId": "deleteSalesInvoice",
        "summary": "Delete",
        "description": "",
        "responses": {
          "204": {
            "description": "No content",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/sales_invoices/{id}/payments": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Fatura ID",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "tags": [
          "SalesInvoices"
        ],
        "operationId": "paySalesInvoice",
        "summary": "Pay",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: payable, transaction*"
          },
          {
            "name": "payment_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "payments"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/PaymentFormAttributes"
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Ödeme",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Payment"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "sales_invoices",
                          "purchase_bills",
                          "taxes",
                          "bank_fees",
                          "salaries",
                          "checks",
                          "transactions"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/sales_invoices/{id}/cancel": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Fatura ID",
          "in": "path",
          "required": true
        }
      ],
      "delete": {
        "tags": [
          "SalesInvoices"
        ],
        "operationId": "cancelSalesInvoice",
        "summary": "Cancel",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, contact, details, details.product, payments, payments.transaction, tags, sharings, recurrence_plan, active_e_document*"
          }
        ],
        "responses": {
          "200": {
            "description": "Fatura",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/SalesInvoice"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "contacts",
                          "sales_invoice_details",
                          "payments",
                          "tags",
                          "sales_offers",
                          "sharings",
                          "recurrence_plans",
                          "e_archives",
                          "e_invoices"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/sales_invoices/{id}/recover": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Fatura ID",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "SalesInvoices"
        ],
        "operationId": "recoverSalesInvoice",
        "summary": "Recover",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, contact, details, details.product, payments, payments.transaction, tags, sharings, recurrence_plan, active_e_document*"
          }
        ],
        "responses": {
          "200": {
            "description": "Fatura",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/SalesInvoice"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "contacts",
                          "sales_invoice_details",
                          "payments",
                          "tags",
                          "sales_offers",
                          "sharings",
                          "recurrence_plans",
                          "e_archives",
                          "e_invoices"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/sales_invoices/{id}/archive": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Fatura ID",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "SalesInvoices"
        ],
        "operationId": "archiveSalesInvoice",
        "summary": "Archive",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, contact, details, details.product, payments, payments.transaction, tags, sharings, recurrence_plan, active_e_document*"
          }
        ],
        "responses": {
          "200": {
            "description": "Fatura",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/SalesInvoice"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "contacts",
                          "sales_invoice_details",
                          "payments",
                          "tags",
                          "sales_offers",
                          "sharings",
                          "recurrence_plans",
                          "e_archives",
                          "e_invoices"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/sales_invoices/{id}/unarchive": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Fatura ID",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "SalesInvoices"
        ],
        "operationId": "unarchiveSalesInvoice",
        "summary": "Unarchive",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, contact, details, details.product, payments, payments.transaction, tags, sharings, recurrence_plan, active_e_document*"
          }
        ],
        "responses": {
          "200": {
            "description": "Fatura",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/SalesInvoice"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "contacts",
                          "sales_invoice_details",
                          "payments",
                          "tags",
                          "sales_offers",
                          "sharings",
                          "recurrence_plans",
                          "e_archives",
                          "e_invoices"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/sales_invoices/{id}/convert_to_invoice": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Fatura ID",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "SalesInvoices"
        ],
        "operationId": "convertEstimateToInvoice",
        "summary": "Convert estimate to invoice",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, contact, details, details.product, payments, payments.transaction, tags, sharings, recurrence_plan, active_e_document*"
          },
          {
            "name": "sales_invoice_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "sales_invoices"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/SalesInvoiceAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "details": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "sales_invoice_details"
                                    ]
                                  },
                                  "attributes": {
                                    "$ref": "#/definitions/SalesInvoiceDetailAttributes"
                                  },
                                  "relationships": {
                                    "type": "object",
                                    "properties": {
                                      "product": {
                                        "type": "object",
                                        "properties": {
                                          "data": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "maxLength": 255
                                              },
                                              "type": {
                                                "type": "string",
                                                "maxLength": 255,
                                                "description": "Type of the resource",
                                                "enum": [
                                                  "products"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "contact": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "contacts"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "category": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "item_categories"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "tags"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        },
                        "sales_offer": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "sales_offers"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Fatura",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/SalesInvoice"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "contacts",
                          "sales_invoice_details",
                          "payments",
                          "tags",
                          "sales_offers",
                          "sharings",
                          "recurrence_plans",
                          "e_archives",
                          "e_invoices"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/sales_offers/{id}": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Sales Offer ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "SalesOffers"
        ],
        "operationId": "showSalesOffer",
        "summary": "Show",
        "description": "",
        "responses": {
          "200": {
            "description": "Teklif",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/SalesOffer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/shipment_documents": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "ShipmentDocuments"
        ],
        "operationId": "listShipmentDocuments",
        "summary": "Index",
        "description": "",
        "parameters": [
          {
            "name": "filter[flow_type]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[invoice_status]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[archived]",
            "type": "boolean",
            "in": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "in": "query",
            "description": "Sortable parameters - *Available: id, issue_date, description, inflow*",
            "default": "id"
          },
          {
            "name": "page[number]",
            "type": "integer",
            "in": "query",
            "description": "Page Number",
            "default": 1
          },
          {
            "name": "page[size]",
            "type": "integer",
            "in": "query",
            "description": "Page Size",
            "default": 15,
            "minimum": 1,
            "maximum": 25
          },
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: contact, stock_movements, stock_movements.product, tags, invoices*"
          }
        ],
        "responses": {
          "200": {
            "description": "İrsaliyeler",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ShipmentDocument"
                  }
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "contacts",
                          "tags",
                          "stock_movements",
                          "sales_invoices",
                          "purchase_bills"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                },
                "meta": {
                  "$ref": "#/definitions/ListMeta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ShipmentDocuments"
        ],
        "operationId": "createShipmentDocument",
        "summary": "Create",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: contact, stock_movements, stock_movements.product, tags, invoices*"
          },
          {
            "name": "shipment_document_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "shipment_documents"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/ShipmentDocumentAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "stock_movements": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "stock_movements"
                                    ]
                                  },
                                  "attributes": {
                                    "$ref": "#/definitions/StockMovementAttributes"
                                  },
                                  "relationships": {
                                    "type": "object",
                                    "properties": {
                                      "product": {
                                        "type": "object",
                                        "properties": {
                                          "data": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "maxLength": 255
                                              },
                                              "type": {
                                                "type": "string",
                                                "maxLength": 255,
                                                "description": "Type of the resource",
                                                "enum": [
                                                  "products"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "contact": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "contact"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "tags"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "İrsaliye",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/ShipmentDocument"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "contacts",
                          "tags",
                          "stock_movements",
                          "sales_invoices",
                          "purchase_bills"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/shipment_documents/{id}": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "İrsaliye ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "ShipmentDocuments"
        ],
        "operationId": "showShipmentDocument",
        "summary": "Show",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: contact, stock_movements, stock_movements.product, tags, invoices*"
          }
        ],
        "responses": {
          "200": {
            "description": "İrsaliye",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/ShipmentDocument"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "contacts",
                          "tags",
                          "stock_movements",
                          "sales_invoices",
                          "purchase_bills"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ShipmentDocuments"
        ],
        "operationId": "updateShipmentDocument",
        "summary": "Edit",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: contact, stock_movements, stock_movements.product, tags, invoices*"
          },
          {
            "name": "shipment_document_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "shipment_documents"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/ShipmentDocumentAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "stock_movements": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "stock_movements"
                                    ]
                                  },
                                  "attributes": {
                                    "$ref": "#/definitions/StockMovementAttributes"
                                  },
                                  "relationships": {
                                    "type": "object",
                                    "properties": {
                                      "product": {
                                        "type": "object",
                                        "properties": {
                                          "data": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "maxLength": 255
                                              },
                                              "type": {
                                                "type": "string",
                                                "maxLength": 255,
                                                "description": "Type of the resource",
                                                "enum": [
                                                  "products"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "contact": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "contact"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "tags"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "İrsaliye",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/ShipmentDocument"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "contacts",
                          "tags",
                          "stock_movements",
                          "sales_invoices",
                          "purchase_bills"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShipmentDocuments"
        ],
        "operationId": "deleteShipmentDocument",
        "summary": "Delete",
        "description": "",
        "responses": {
          "204": {
            "description": "No content",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/stock_movements": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "StockMovements"
        ],
        "operationId": "listStockMovements",
        "summary": "Index",
        "description": "Tüm stok hareketlerini listeler. Her irsaliye oluşturulurken stok hareketi de oluşturulur. Buna ilave olarak, irsaliyeli satış faturası veya irsaliyeli alış faturası oluşturulduğunda stok takibi yapılan bir ürün içeren her fatura kalemine karşılık otomatik olarak bir stok hareketi oluşur.",
        "parameters": [
          {
            "name": "sort",
            "type": "string",
            "in": "query",
            "description": "Sortable parameters - *Available: id, date*",
            "default": "id"
          },
          {
            "name": "page[number]",
            "type": "integer",
            "in": "query",
            "description": "Page Number",
            "default": 1
          },
          {
            "name": "page[size]",
            "type": "integer",
            "in": "query",
            "description": "Page Size",
            "default": 15,
            "minimum": 1,
            "maximum": 25
          },
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: product, source, contact*"
          }
        ],
        "responses": {
          "200": {
            "description": "Stok hareketleri",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/StockMovement"
                  }
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "products",
                          "shipment_documents",
                          "sales_invoice_details",
                          "purchase_bill_details",
                          "contacts"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                },
                "meta": {
                  "$ref": "#/definitions/ListMeta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/tags": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "listTags",
        "summary": "Index",
        "description": "",
        "parameters": [
          {
            "name": "sort",
            "type": "string",
            "in": "query",
            "description": "Sortable parameters - *Available: id, name*",
            "default": "id"
          },
          {
            "name": "page[number]",
            "type": "integer",
            "in": "query",
            "description": "Page Number",
            "default": 1
          },
          {
            "name": "page[size]",
            "type": "integer",
            "in": "query",
            "description": "Page Size",
            "default": 15,
            "minimum": 1,
            "maximum": 25
          }
        ],
        "responses": {
          "200": {
            "description": "Etiketler",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Tag"
                  }
                },
                "meta": {
                  "$ref": "#/definitions/ListMeta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tags"
        ],
        "operationId": "createTag",
        "summary": "Create",
        "description": "",
        "parameters": [
          {
            "name": "tag_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "tags"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/TagAttributes"
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Etiket",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Tag"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/tags/{id}": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Etiket ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "showTag",
        "summary": "Show",
        "description": "",
        "responses": {
          "200": {
            "description": "Etiket",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Tag"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tags"
        ],
        "operationId": "updateTag",
        "summary": "Edit",
        "description": "",
        "parameters": [
          {
            "name": "tag_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "tags"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/TagAttributes"
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Etiket",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Tag"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "operationId": "deleteTag",
        "summary": "Delete",
        "description": "",
        "responses": {
          "204": {
            "description": "No content",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/taxes": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Taxes"
        ],
        "operationId": "listTaxes",
        "summary": "Index",
        "description": "",
        "parameters": [
          {
            "name": "filter[due_date]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[issue_date]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[currency]",
            "type": "string",
            "in": "query"
          },
          {
            "name": "filter[remaining]",
            "type": "number",
            "in": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "in": "query",
            "description": "Sortable parameters - *Available: id, issue_date, due_date, remaining, description, net_total*",
            "default": "id"
          },
          {
            "name": "page[number]",
            "type": "integer",
            "in": "query",
            "description": "Page Number",
            "default": 1
          },
          {
            "name": "page[size]",
            "type": "integer",
            "in": "query",
            "description": "Page Size",
            "default": 15,
            "minimum": 1,
            "maximum": 25
          },
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, tags, payments*"
          }
        ],
        "responses": {
          "200": {
            "description": "Vergiler",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Tax"
                  }
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "tags"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                },
                "meta": {
                  "$ref": "#/definitions/ListMeta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Taxes"
        ],
        "operationId": "createTax",
        "summary": "Create",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, tags*"
          },
          {
            "name": "tax_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "taxes"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/TaxAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "category": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "item_categories"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "tags"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Vergi",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Tax"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "tags"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/taxes/{id}": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Vergi ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Taxes"
        ],
        "operationId": "showTax",
        "summary": "Show",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, tags*"
          }
        ],
        "responses": {
          "200": {
            "description": "Vergi",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Tax"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "tags"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Taxes"
        ],
        "operationId": "updateTax",
        "summary": "Edit",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, tags*"
          },
          {
            "name": "tax_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "taxes"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/TaxAttributes"
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "category": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "description": "Type of the resource",
                                  "enum": [
                                    "item_categories"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "Type of the resource",
                                    "enum": [
                                      "tags"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Vergi",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Tax"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "tags"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Taxes"
        ],
        "operationId": "deleteTax",
        "summary": "Delete",
        "description": "",
        "responses": {
          "204": {
            "description": "No content",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/taxes/{id}/archive": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Vergi ID",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "Taxes"
        ],
        "operationId": "archiveTax",
        "summary": "Archive",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, tags*"
          }
        ],
        "responses": {
          "200": {
            "description": "Vergi",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Tax"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "tags"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/taxes/{id}/unarchive": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Vergi ID",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "Taxes"
        ],
        "operationId": "unarchiveTax",
        "summary": "Unarchive",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: category, tags*"
          }
        ],
        "responses": {
          "200": {
            "description": "Vergi",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Tax"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories",
                          "tags"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/taxes/{id}/payments": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Vergi ID",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "tags": [
          "Taxes"
        ],
        "operationId": "payTax",
        "summary": "Pay",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: payable, transaction*"
          },
          {
            "name": "payment_form",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "payments"
                      ]
                    },
                    "attributes": {
                      "$ref": "#/definitions/PaymentFormAttributes"
                    }
                  }
                }
              }
            },
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Ödeme",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Payment"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "sales_invoices",
                          "purchase_bills",
                          "taxes",
                          "bank_fees",
                          "salaries",
                          "checks",
                          "transactions"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/trackable_jobs/{id}": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "Trackable Job ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "TrackableJobs"
        ],
        "operationId": "showTrackableJob",
        "summary": "Show",
        "description": "",
        "responses": {
          "200": {
            "description": "Trackable Job",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/TrackableJob"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{company_id}/transactions/{id}": {
      "parameters": [
        {
          "name": "company_id",
          "type": "integer",
          "description": "Firma ID",
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "type": "integer",
          "description": "İşlem ID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Transactions"
        ],
        "operationId": "showTransaction",
        "summary": "Show",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "in": "query",
            "description": "Response ile birlikte geri dönmesini istediğiniz ilişkiler - *Available: debit_account, credit_account, payments*"
          }
        ],
        "responses": {
          "200": {
            "description": "İşlem",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Transaction"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "accounts",
                          "payments"
                        ]
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Transactions"
        ],
        "operationId": "deleteTransaction",
        "summary": "Delete",
        "description": "",
        "responses": {
          "204": {
            "description": "No content",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "parasut_auth": []
    }
  ],
  "securityDefinitions": {
    "parasut_auth": {
      "type": "oauth2",
      "tokenUrl": "https://api.parasut.com/oauth/token",
      "authorizationUrl": "https://api.parasut.com/oauth/authorize",
      "flow": "accessCode",
      "scopes": {}
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        }
      }
    },
    "ListMeta": {
      "type": "object",
      "properties": {
        "current_page": {
          "type": "integer"
        },
        "total_pages": {
          "type": "integer"
        },
        "total_count": {
          "type": "integer"
        }
      }
    },
    "AccountAttributes": {
      "type": "object",
      "properties": {
        "used_for": {
          "type": "string",
          "readOnly": true
        },
        "last_used_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "balance": {
          "type": "number",
          "readOnly": true,
          "description": "Bakiye"
        },
        "last_adjustment_date": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "bank_integration_type": {
          "type": "string",
          "readOnly": true
        },
        "associate_email": {
          "type": "string",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": false,
          "description": "Hesap ismi"
        },
        "currency": {
          "type": "string",
          "enum": [
            "TRL",
            "USD",
            "EUR",
            "GBP"
          ],
          "readOnly": false,
          "description": "Döviz cinsi"
        },
        "account_type": {
          "type": "string",
          "enum": [
            "cash",
            "bank",
            "sys"
          ],
          "readOnly": false,
          "description": "Hesap tipi"
        },
        "bank_name": {
          "type": "string",
          "readOnly": false,
          "description": "Banka ismi"
        },
        "bank_branch": {
          "type": "string",
          "readOnly": false,
          "description": "Banka şubesi"
        },
        "bank_account_no": {
          "type": "string",
          "readOnly": false,
          "description": "Banka hesap no"
        },
        "iban": {
          "type": "string",
          "readOnly": false,
          "description": "IBAN"
        },
        "archived": {
          "type": "boolean",
          "readOnly": false
        }
      },
      "required": [
        "name"
      ]
    },
    "Account": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "accounts"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/AccountAttributes"
        },
        "relationships": {}
      },
      "required": [
        "attributes"
      ]
    },
    "AccountDebitCreditTransactionFormAttributes": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "description": "İşlem Tarihi",
          "readOnly": false
        },
        "amount": {
          "type": "number",
          "description": "İşlem Tutarı",
          "readOnly": false
        },
        "description": {
          "type": "string",
          "description": "İşlem Açıklaması",
          "readOnly": false
        }
      },
      "required": [
        "date",
        "amount"
      ]
    },
    "AccountDebitCreditTransactionForm": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "transactions"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/AccountDebitCreditTransactionFormAttributes"
        },
        "relationships": {}
      },
      "required": [
        "attributes"
      ]
    },
    "AddressAttributes": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "address": {
          "type": "string",
          "readOnly": true
        },
        "phone": {
          "type": "string",
          "readOnly": true
        },
        "fax": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "addresses"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/AddressAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "addressable": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "companies"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "BankFeeAttributes": {
      "type": "object",
      "properties": {
        "total_paid": {
          "type": "number",
          "readOnly": true
        },
        "archived": {
          "type": "boolean",
          "readOnly": true
        },
        "remaining": {
          "type": "number",
          "readOnly": true
        },
        "remaining_in_trl": {
          "type": "number",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "readOnly": false
        },
        "currency": {
          "type": "string",
          "enum": [
            "TRL",
            "USD",
            "EUR",
            "GBP"
          ],
          "readOnly": false
        },
        "issue_date": {
          "type": "string",
          "format": "date",
          "readOnly": false
        },
        "due_date": {
          "type": "string",
          "format": "date",
          "readOnly": false
        },
        "exchange_rate": {
          "type": "number",
          "readOnly": false
        },
        "net_total": {
          "type": "number",
          "readOnly": false
        }
      },
      "required": [
        "description",
        "currency",
        "issue_date",
        "due_date",
        "net_total"
      ]
    },
    "BankFee": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "bank_fees"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/BankFeeAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "category": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "item_categories"
                      ]
                    }
                  }
                }
              }
            },
            "tags": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "tags"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "CompanyAttributes": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "valid_until": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "subscription_status": {
          "type": "string",
          "readOnly": true
        },
        "trial_expiration_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "allowed_inspection_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "app_url": {
          "type": "string",
          "readOnly": true
        },
        "legal_name": {
          "type": "string",
          "readOnly": true
        },
        "occupation_field": {
          "type": "string",
          "readOnly": true
        },
        "district": {
          "type": "string",
          "readOnly": true
        },
        "city": {
          "type": "string",
          "readOnly": true
        },
        "tax_office": {
          "type": "string",
          "readOnly": true
        },
        "tax_number": {
          "type": "string",
          "readOnly": true
        },
        "mersis_no": {
          "type": "string",
          "readOnly": true
        },
        "total_unused_bonus_months": {
          "type": "number",
          "readOnly": true
        },
        "subscription_started_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "subscription_renewed_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "subscription_value": {
          "type": "number",
          "readOnly": true
        },
        "primary_job": {
          "type": "string",
          "readOnly": true
        },
        "is_active": {
          "type": "boolean",
          "readOnly": true
        },
        "accessible": {
          "type": "boolean",
          "readOnly": true
        },
        "inspectable": {
          "type": "boolean",
          "readOnly": true
        },
        "is_in_grace_period": {
          "type": "boolean",
          "readOnly": true
        },
        "subscription_status_for_analytics": {
          "type": "string",
          "readOnly": true
        },
        "end_of_grace_period_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "inventory_enabled": {
          "type": "boolean",
          "readOnly": true
        },
        "is_in_trial_period": {
          "type": "boolean",
          "readOnly": true
        },
        "has_iyzico_integration": {
          "type": "boolean",
          "readOnly": true
        },
        "has_active_subscription": {
          "type": "boolean",
          "readOnly": true
        },
        "logo": [
          {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "is_processing": {
                "type": "boolean"
              }
            }
          }
        ],
        "subscription_info_text": {
          "type": "string",
          "readOnly": true
        },
        "subscription_info_title": {
          "type": "string",
          "readOnly": true
        },
        "subscription_url": {
          "type": "string",
          "readOnly": true
        },
        "referral_url": {
          "type": "string",
          "readOnly": true
        },
        "subscription_plan_duration": {
          "type": "number",
          "readOnly": true
        },
        "subscription_plan_name": {
          "type": "string",
          "readOnly": true
        },
        "e_invoicing_activated_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "has_selected_plan": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Company": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "companies"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/CompanyAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "owner": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "users"
                      ]
                    }
                  }
                }
              }
            },
            "address": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "addresses"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "ContactAttributes": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "number",
          "readOnly": true,
          "description": "Bakiye"
        },
        "trl_balance": {
          "type": "number",
          "readOnly": true,
          "description": "TL Bakiye"
        },
        "usd_balance": {
          "type": "number",
          "readOnly": true,
          "description": "USD Bakiye"
        },
        "eur_balance": {
          "type": "number",
          "readOnly": true,
          "description": "EUR Bakiye"
        },
        "gbp_balance": {
          "type": "number",
          "readOnly": true,
          "description": "GBP Bakiye"
        },
        "created_at": {
          "type": "string",
          "format": "date",
          "readOnly": true,
          "description": "Kayıt tarihi"
        },
        "updated_at": {
          "type": "string",
          "format": "date",
          "readOnly": true,
          "description": "Son güncelleme tarihi"
        },
        "email": {
          "type": "string",
          "format": "email",
          "readOnly": false,
          "description": "E-posta"
        },
        "name": {
          "type": "string",
          "readOnly": false,
          "description": "Müşteri/tedarikçi ismi"
        },
        "short_name": {
          "type": "string",
          "readOnly": false
        },
        "contact_type": {
          "type": "string",
          "enum": [
            "person",
            "company"
          ],
          "readOnly": false,
          "description": "Tip"
        },
        "tax_office": {
          "type": "string",
          "readOnly": false,
          "description": "Vergi dairesi"
        },
        "tax_number": {
          "type": "string",
          "readOnly": false,
          "description": "Vergi numarası/TC kimlik no"
        },
        "district": {
          "type": "string",
          "readOnly": false,
          "description": "İlçe"
        },
        "city": {
          "type": "string",
          "readOnly": false,
          "description": "İl"
        },
        "address": {
          "type": "string",
          "readOnly": false
        },
        "phone": {
          "type": "string",
          "readOnly": false
        },
        "fax": {
          "type": "string",
          "readOnly": false
        },
        "is_abroad": {
          "type": "boolean",
          "readOnly": false
        },
        "archived": {
          "type": "boolean",
          "readOnly": false
        },
        "iban": {
          "type": "string",
          "readOnly": false
        },
        "account_type": {
          "type": "string",
          "enum": [
            "customer",
            "supplier"
          ],
          "readOnly": false
        }
      },
      "required": [
        "name",
        "account_type"
      ]
    },
    "Contact": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "contacts"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/ContactAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "category": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "item_categories"
                      ]
                    }
                  }
                }
              }
            },
            "contact_portal": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "contact_portals"
                      ]
                    }
                  }
                }
              }
            },
            "contact_people": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "contact_people"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "ContactCollectionFormAttributes": {
      "allOf": [
        {
          "$ref": "#/definitions/PaymentFormAttributes"
        },
        {
          "type": "object",
          "properties": {
            "payable_ids": {
              "description": "Satış Faturası ID'leri - *Tahsilatınızın öncelikli olarak eşleşmesini istediğiniz faturalar*",
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        }
      ]
    },
    "ContactCollectionForm": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "transactions"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/ContactCollectionFormAttributes"
        },
        "relationships": {}
      },
      "required": [
        "attributes"
      ]
    },
    "ContactPaymentFormAttributes": {
      "allOf": [
        {
          "$ref": "#/definitions/PaymentFormAttributes"
        },
        {
          "type": "object",
          "properties": {
            "payable_ids": {
              "description": "Alış Faturası ID'leri - *Ödemenizin öncelikli olarak eşleşmesini istediğiniz faturalar*",
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        }
      ]
    },
    "ContactPaymentForm": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "transactions"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/ContactPaymentFormAttributes"
        },
        "relationships": {}
      },
      "required": [
        "attributes"
      ]
    },
    "ContactPersonAttributes": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": false
        },
        "email": {
          "type": "string",
          "format": "email",
          "readOnly": false
        },
        "phone": {
          "type": "string",
          "readOnly": false
        },
        "notes": {
          "type": "string",
          "readOnly": false
        }
      }
    },
    "ContactPerson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "contact_people"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/ContactPersonAttributes"
        },
        "relationships": {}
      },
      "required": [
        "attributes"
      ]
    },
    "EArchiveAttributes": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "readOnly": true
        },
        "vkn": {
          "type": "string",
          "readOnly": true
        },
        "invoice_number": {
          "type": "string",
          "readOnly": true
        },
        "note": {
          "type": "string",
          "readOnly": true
        },
        "is_printed": {
          "type": "boolean",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "enum": [
            "bounced",
            "sent",
            "printed",
            "legalized"
          ],
          "readOnly": true
        },
        "printed_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "cancellable_until": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "is_signed": {
          "type": "boolean",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        }
      }
    },
    "EArchive": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "e_archives"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/EArchiveAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "sales_invoice": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "sales_invoices"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "EArchiveFormAttributes": {
      "allOf": [
        {
          "$ref": "#/definitions/EDocumentCommonFormAttributes"
        },
        {
          "type": "object",
          "properties": {
            "internet_sale": {
              "type": "object",
              "description": "İnternet satışı bilgileri. İnternet üzerinden bir satış yapıyorsanız doldurmak zorunlu.",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "İnternet adresi"
                },
                "payment_type": {
                  "type": "string",
                  "description": "Ödeme tipi",
                  "enum": [
                    "KREDIKARTI/BANKAKARTI",
                    "EFT/HAVALE",
                    "KAPIDAODEME",
                    "ODEMEARACISI"
                  ]
                },
                "payment_platform": {
                  "type": "string",
                  "description": "Ödeme platformu - *(iyzico, payu gibi)*"
                },
                "payment_date": {
                  "type": "string",
                  "format": "date",
                  "pattern": "YYYY-MM-DD",
                  "description": "Ödeme tarihi"
                }
              }
            },
            "shipment": {
              "type": "object",
              "description": "Gönderi bilgileri. Gönderim yapılıyorsa doldurmak zorunlu. Örneğin bir hizmet satışı için kargolanan veya gönderilen birşey yoktur, bu durumda doldurulması zorunlu değil ancak bir e-ticaret sitesi olarak yapılan satışta müşteriye kargo / kurye ile bir ürün gönderimi vardır, bu durumda doldurmak zorunlu.",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Kargo şirketi adı *(Eğer kargo ile gönderiliyorsa)*"
                },
                "vkn": {
                  "type": "string",
                  "description": "Kargo şirketi VKN *(Eğer kargo ile gönderiliyorsa)*"
                },
                "name": {
                  "type": "string",
                  "description": "Kurye adı *(Eğer kurye ile gönderiliyorsa)*"
                },
                "tckn": {
                  "type": "string",
                  "description": "Kurye TCKN *(Eğer kurye ile gönderiliyorsa)*"
                },
                "date": {
                  "type": "string",
                  "description": "Gönderi tarihi"
                }
              }
            }
          }
        }
      ]
    },
    "EArchiveForm": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "e_archives"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/EArchiveFormAttributes"
        },
        "relationships": {}
      },
      "required": [
        "attributes"
      ]
    },
    "EDocumentCommonFormAttributes": {
      "type": "object",
      "properties": {
        "vat_withholding_code": {
          "type": "string",
          "description": "Tevkifat oranına ait vergi kodu. - *Bu dosyada ilgili kodları bulabilirsiniz: https://www.efatura.gov.tr/dosyalar/kilavuzlar/UBLTR_1.2_Kilavuzlar.zip*",
          "readOnly": false
        },
        "vat_exemption_reason_code": {
          "type": "string",
          "description": "KDV'si %0 olan hizmet ve ürünlerin KDV muafiyet sebebi kodu. - *Bu dosyada ilgili kodları bulabilirsiniz: https://www.efatura.gov.tr/dosyalar/kilavuzlar/UBLTR_1.2_Kilavuzlar.zip*",
          "readOnly": false
        },
        "vat_exemption_reason": {
          "type": "string",
          "description": "Eğer KDV muafiyet sebebi kodu 250 veya 350 ise KDV muafiyet sebebi açıklaması.",
          "readOnly": false
        },
        "note": {
          "type": "string",
          "description": "Fatura notu",
          "readOnly": false
        },
        "excise_duty_codes": {
          "type": "array",
          "description": "ÖTV kodları - *Özel tüketim vergisi faturadaki her kalem için ayrıdır. ÖTV uygulanan her ürün için ÖTV kodu göndermeniz gerekmektedir.*",
          "items": {
            "type": "object",
            "properties": {
              "product": {
                "type": "integer",
                "description": "Ürün ID"
              },
              "sales_excise_duty_code": {
                "type": "string",
                "description": "ÖTV kodu",
                "enum": [
                  57,
                  59,
                  60,
                  61,
                  62,
                  63,
                  9077
                ]
              }
            }
          },
          "readOnly": false
        }
      }
    },
    "EDocumentCommonForm": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "e_document_commons"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/EDocumentCommonFormAttributes"
        },
        "relationships": {}
      },
      "required": [
        "attributes"
      ]
    },
    "EDocumentPdfAttributes": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "readOnly": true
        },
        "expires_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "EDocumentPdf": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "e_document_pdfs"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/EDocumentPdfAttributes"
        },
        "relationships": {}
      },
      "required": [
        "attributes"
      ]
    },
    "EInvoiceAttributes": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "readOnly": true
        },
        "uuid": {
          "type": "string",
          "readOnly": true
        },
        "env_uuid": {
          "type": "string",
          "readOnly": true
        },
        "from_address": {
          "type": "string",
          "readOnly": true
        },
        "from_vkn": {
          "type": "string",
          "readOnly": true
        },
        "to_address": {
          "type": "string",
          "readOnly": true
        },
        "to_vkn": {
          "type": "string",
          "readOnly": true
        },
        "direction": {
          "type": "string",
          "enum": [
            "inbound",
            "outbound"
          ],
          "readOnly": true
        },
        "note": {
          "type": "string",
          "readOnly": true
        },
        "response_type": {
          "type": "string",
          "enum": [
            "accepted",
            "rejected",
            "refunded"
          ],
          "readOnly": true
        },
        "contact_name": {
          "type": "string",
          "readOnly": true
        },
        "scenario": {
          "type": "string",
          "enum": [
            "basic",
            "commercial"
          ],
          "readOnly": true
        },
        "status": {
          "type": "string",
          "enum": [
            "waiting",
            "failed",
            "successful"
          ],
          "readOnly": true
        },
        "issue_date": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "is_expired": {
          "type": "boolean",
          "readOnly": true
        },
        "is_answerable": {
          "type": "boolean",
          "readOnly": true
        },
        "net_total": {
          "type": "number",
          "readOnly": true
        },
        "currency": {
          "type": "string",
          "enum": [
            "TRL",
            "USD",
            "EUR",
            "GBP"
          ],
          "readOnly": true
        },
        "item_type": {
          "type": "string",
          "enum": [
            "refund",
            "invoice"
          ],
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        }
      }
    },
    "EInvoice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "e_invoices"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/EInvoiceAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "invoice": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "sales_invoices",
                        "purchase_bills"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "EInvoiceFormAttributes": {
      "allOf": [
        {
          "$ref": "#/definitions/EDocumentCommonFormAttributes"
        },
        {
          "type": "object",
          "properties": {
            "scenario": {
              "type": "string",
              "description": "Gönderim senaryosu",
              "enum": [
                "basic",
                "commercial"
              ]
            },
            "to": {
              "type": "string",
              "description": "Alıcının e-Fatura gelen kutusu - *[e-Fatura Gelen Kutusu Öğrenme](/#operation/listEInvoiceInboxes)*"
            }
          }
        }
      ]
    },
    "EInvoiceForm": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "e_invoices"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/EInvoiceFormAttributes"
        },
        "relationships": {}
      },
      "required": [
        "attributes"
      ]
    },
    "EInvoiceInboxAttributes": {
      "type": "object",
      "properties": {
        "vkn": {
          "type": "string",
          "readOnly": true
        },
        "e_invoice_address": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "inbox_type": {
          "type": "string",
          "readOnly": true
        },
        "address_registered_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "registered_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        }
      }
    },
    "EInvoiceInbox": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "e_invoice_inboxes"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/EInvoiceInboxAttributes"
        },
        "relationships": {}
      },
      "required": [
        "attributes"
      ]
    },
    "EmployeeAttributes": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "number",
          "readOnly": true,
          "description": "Bakiye"
        },
        "trl_balance": {
          "type": "number",
          "readOnly": true
        },
        "usd_balance": {
          "type": "number",
          "readOnly": true
        },
        "eur_balance": {
          "type": "number",
          "readOnly": true
        },
        "gbp_balance": {
          "type": "number",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": false,
          "description": "Çalışan adı soyadı"
        },
        "email": {
          "type": "string",
          "format": "email",
          "readOnly": false
        },
        "archived": {
          "type": "boolean",
          "readOnly": false
        },
        "iban": {
          "type": "string",
          "readOnly": false
        }
      },
      "required": [
        "name"
      ]
    },
    "Employee": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "employees"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/EmployeeAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "category": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "item_categories"
                      ]
                    }
                  }
                }
              }
            },
            "managed_by_user": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "users"
                      ]
                    }
                  }
                }
              }
            },
            "managed_by_user_role": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "user_roles"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "ItemCategoryAttributes": {
      "type": "object",
      "properties": {
        "full_path": {
          "type": "string",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": false,
          "description": "Kategori adı"
        },
        "bg_color": {
          "type": "string",
          "readOnly": false,
          "description": "Renk"
        },
        "text_color": {
          "type": "string",
          "readOnly": false,
          "description": "Yazı rengi"
        },
        "category_type": {
          "type": "string",
          "enum": [
            "Product",
            "Contact",
            "Employee",
            "SalesInvoice",
            "Expenditure"
          ],
          "readOnly": false,
          "description": "Kategori tipi"
        },
        "parent_id": {
          "type": "integer",
          "readOnly": false
        }
      },
      "required": [
        "name",
        "category_type"
      ]
    },
    "ItemCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "item_categories"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/ItemCategoryAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "parent_category": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "item_categories"
                      ]
                    }
                  }
                }
              }
            },
            "subcategories": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "item_categories"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "MeAttributes": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "format": "email",
          "readOnly": true
        },
        "is_confirmed": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Me": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "users"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/MeAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "user_roles": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "user_roles"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "companies": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "companies"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "profile": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "profiles"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "PaymentAttributes": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "Ödeme tarihi",
          "readOnly": false
        },
        "amount": {
          "type": "number",
          "description": "Ödeme tutarı",
          "readOnly": false
        },
        "currency": {
          "type": "number",
          "description": "Para birimi",
          "readOnly": false
        },
        "notes": {
          "type": "string",
          "readOnly": false
        }
      }
    },
    "Payment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "payments"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/PaymentAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "payable": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "sales_invoices",
                        "purchase_bills",
                        "taxes",
                        "bank_fees",
                        "salaries",
                        "checks"
                      ]
                    }
                  }
                }
              }
            },
            "transaction": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "transactions"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "PaymentFormAttributes": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Ödeme/Tahsilat Açıklaması",
          "readOnly": false
        },
        "account_id": {
          "type": "integer",
          "description": "Kasa veya Banka - *Bu parametre ayrıca ödemenin/tahsilatın hangi döviz kuru ile yapılacağını belirler.*",
          "readOnly": false
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "Ödeme/Tahsilat tarihi",
          "readOnly": false
        },
        "amount": {
          "type": "number",
          "description": "Ödeme/Tahsilat tutarı",
          "readOnly": false
        },
        "exchange_rate": {
          "type": "number",
          "description": "Döviz kuru - *Eğer ödeme/tahsilat, faturadan farklı bir döviz kuru ile yapılacaksa; döviz kurunun TL karşılığını belirtin. Eğer ödeme/tahsilat, fatura ile aynı döviz kuru ile yapılacaksa; \"1.0\" değerini girin veya boş bırakın.*",
          "readOnly": false
        }
      }
    },
    "PaymentForm": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "payments"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/PaymentFormAttributes"
        },
        "relationships": {}
      },
      "required": [
        "attributes"
      ]
    },
    "ProductAttributes": {
      "type": "object",
      "properties": {
        "sales_excise_duty_code": {
          "type": "string",
          "readOnly": true
        },
        "sales_invoice_details_count": {
          "type": "integer",
          "readOnly": true
        },
        "purchase_invoice_details_count": {
          "type": "integer",
          "readOnly": true
        },
        "list_price_in_trl": {
          "type": "number",
          "readOnly": true
        },
        "buying_price_in_trl": {
          "type": "number",
          "readOnly": true
        },
        "stock_count": {
          "type": "number",
          "readOnly": true,
          "description": "Stok Miktarı"
        },
        "created_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "code": {
          "type": "string",
          "readOnly": false,
          "description": "Ürün/hizmet kodu"
        },
        "name": {
          "type": "string",
          "readOnly": false,
          "description": "Ürün/hizmet ismi"
        },
        "vat_rate": {
          "type": "number",
          "readOnly": false,
          "description": "KDV oranı"
        },
        "sales_excise_duty": {
          "type": "number",
          "readOnly": false,
          "description": "Satış ÖTV"
        },
        "sales_excise_duty_type": {
          "type": "string",
          "readOnly": false,
          "description": "Satış ÖTV tipi"
        },
        "purchase_excise_duty": {
          "type": "number",
          "readOnly": false,
          "description": "Alış ÖTV"
        },
        "purchase_excise_duty_type": {
          "type": "string",
          "readOnly": false,
          "description": "Alış ÖTV tipi"
        },
        "unit": {
          "type": "string",
          "readOnly": false,
          "description": "Birim"
        },
        "communications_tax_rate": {
          "type": "number",
          "readOnly": false,
          "description": "ÖİV oranı"
        },
        "archived": {
          "type": "boolean",
          "readOnly": false
        },
        "list_price": {
          "type": "number",
          "readOnly": false,
          "description": "Satış fiyatı"
        },
        "currency": {
          "type": "string",
          "readOnly": false,
          "description": "Satış döviz"
        },
        "buying_price": {
          "type": "number",
          "readOnly": false,
          "description": "Alış fiyatı"
        },
        "buying_currency": {
          "type": "string",
          "readOnly": false,
          "description": "Alış döviz"
        },
        "inventory_tracking": {
          "type": "boolean",
          "readOnly": false
        },
        "initial_stock_count": {
          "type": "number",
          "readOnly": false,
          "description": "Başlangıç Stok Miktarı"
        }
      },
      "required": [
        "name"
      ]
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "products"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/ProductAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "category": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "item_categories"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "ProfileAttributes": {
      "type": "object",
      "properties": {
        "phone": {
          "type": "string",
          "readOnly": true
        },
        "job_title": {
          "type": "string",
          "readOnly": true
        },
        "avatar": [
          {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "is_processing": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "Profile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "profiles"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/ProfileAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "user": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "users"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "PurchaseBillAttributes": {
      "type": "object",
      "properties": {
        "archived": {
          "type": "boolean",
          "readOnly": true
        },
        "total_paid": {
          "type": "number",
          "readOnly": true
        },
        "gross_total": {
          "type": "number",
          "readOnly": true
        },
        "total_excise_duty": {
          "type": "number",
          "readOnly": true
        },
        "total_communications_tax": {
          "type": "number",
          "readOnly": true
        },
        "total_vat": {
          "type": "number",
          "readOnly": false
        },
        "total_discount": {
          "type": "number",
          "readOnly": true
        },
        "total_invoice_discount": {
          "type": "number",
          "readOnly": true
        },
        "remaining": {
          "type": "number",
          "readOnly": true
        },
        "remaining_in_trl": {
          "type": "number",
          "readOnly": true
        },
        "payment_status": {
          "type": "string",
          "enum": [
            "paid",
            "overdue",
            "unpaid",
            "partially_paid"
          ],
          "readOnly": true
        },
        "is_detailed": {
          "type": "boolean",
          "readOnly": true
        },
        "sharings_count": {
          "type": "integer",
          "readOnly": true
        },
        "e_invoices_count": {
          "type": "integer",
          "readOnly": true
        },
        "remaining_reimbursement": {
          "type": "number",
          "readOnly": true
        },
        "remaining_reimbursement_in_trl": {
          "type": "number",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "item_type": {
          "type": "string",
          "enum": [
            "purchase_bill",
            "cancelled",
            "recurring_purchase_bill",
            "refund"
          ],
          "readOnly": false
        },
        "description": {
          "type": "string",
          "readOnly": false
        },
        "issue_date": {
          "type": "string",
          "format": "date",
          "readOnly": false
        },
        "due_date": {
          "type": "string",
          "format": "date",
          "readOnly": false
        },
        "invoice_no": {
          "type": "string",
          "readOnly": false
        },
        "currency": {
          "type": "string",
          "enum": [
            "TRL",
            "USD",
            "EUR",
            "GBP"
          ],
          "readOnly": false
        },
        "exchange_rate": {
          "type": "number",
          "readOnly": false
        },
        "net_total": {
          "type": "number",
          "readOnly": false
        },
        "withholding_rate": {
          "type": "number",
          "readOnly": false
        },
        "vat_withholding_rate": {
          "type": "number",
          "readOnly": false
        },
        "invoice_discount_type": {
          "type": "string",
          "enum": [
            "percentage",
            "amount"
          ],
          "readOnly": false
        },
        "invoice_discount": {
          "type": "number",
          "readOnly": false
        }
      },
      "required": [
        "item_type",
        "issue_date",
        "due_date",
        "currency",
        "net_total",
        "total_vat"
      ]
    },
    "PurchaseBill": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "purchase_bills"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/PurchaseBillAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "category": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "item_categories"
                      ]
                    }
                  }
                }
              }
            },
            "spender": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "employees"
                      ]
                    }
                  }
                }
              }
            },
            "supplier": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "contacts"
                      ]
                    }
                  }
                }
              }
            },
            "details": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "purchase_bill_details"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "payments": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "payments"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "tags": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "tags"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "recurrence_plan": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "recurrence_plans"
                      ]
                    }
                  }
                }
              }
            },
            "active_e_document": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "e_invoices"
                      ]
                    }
                  }
                }
              }
            },
            "pay_to": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "contacts",
                        "employees"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "PurchaseBillBasicFormAttributes": {
      "type": "object",
      "properties": {
        "item_type": {
          "type": "string",
          "enum": [
            "purchase_bill",
            "refund"
          ],
          "readOnly": false
        },
        "description": {
          "type": "string",
          "readOnly": false
        },
        "issue_date": {
          "type": "string",
          "format": "date",
          "readOnly": false
        },
        "due_date": {
          "type": "string",
          "format": "date",
          "readOnly": false
        },
        "invoice_no": {
          "type": "string",
          "readOnly": false
        },
        "currency": {
          "type": "string",
          "enum": [
            "TRL",
            "USD",
            "EUR",
            "GBP"
          ],
          "readOnly": false
        },
        "exchange_rate": {
          "type": "number",
          "readOnly": false
        },
        "net_total": {
          "type": "number",
          "readOnly": false
        },
        "total_vat": {
          "type": "number",
          "readOnly": false
        }
      },
      "required": [
        "item_type",
        "issue_date",
        "due_date",
        "currency",
        "net_total",
        "total_vat"
      ]
    },
    "PurchaseBillBasicForm": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "purchase_bills"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/PurchaseBillBasicFormAttributes"
        },
        "relationships": {}
      },
      "required": [
        "attributes"
      ]
    },
    "PurchaseBillDetailAttributes": {
      "type": "object",
      "properties": {
        "net_total": {
          "type": "number",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "quantity": {
          "type": "number",
          "readOnly": false
        },
        "unit_price": {
          "type": "number",
          "readOnly": false
        },
        "vat_rate": {
          "type": "number",
          "readOnly": false
        },
        "discount_type": {
          "type": "string",
          "enum": [
            "percentage",
            "amount"
          ],
          "readOnly": false
        },
        "discount_value": {
          "type": "number",
          "readOnly": false
        },
        "excise_duty_type": {
          "type": "string",
          "enum": [
            "percentage",
            "amount"
          ],
          "readOnly": false
        },
        "excise_duty_value": {
          "type": "number",
          "readOnly": false
        },
        "communications_tax_rate": {
          "type": "number",
          "readOnly": false
        },
        "description": {
          "type": "string",
          "readOnly": false
        }
      },
      "required": [
        "quantity",
        "unit_price",
        "vat_rate"
      ]
    },
    "PurchaseBillDetail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "purchase_bill_details"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/PurchaseBillDetailAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "product": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "products"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "PurchaseBillDetailedFormAttributes": {
      "type": "object",
      "properties": {
        "item_type": {
          "type": "string",
          "enum": [
            "purchase_bill",
            "refund"
          ],
          "readOnly": false
        },
        "description": {
          "type": "string",
          "readOnly": false
        },
        "issue_date": {
          "type": "string",
          "format": "date",
          "readOnly": false
        },
        "due_date": {
          "type": "string",
          "format": "date",
          "readOnly": false
        },
        "invoice_no": {
          "type": "string",
          "readOnly": false
        },
        "currency": {
          "type": "string",
          "enum": [
            "TRL",
            "USD",
            "EUR",
            "GBP"
          ],
          "readOnly": false
        },
        "exchange_rate": {
          "type": "number",
          "readOnly": false
        },
        "withholding_rate": {
          "type": "number",
          "readOnly": false
        },
        "vat_withholding_rate": {
          "type": "number",
          "readOnly": false
        },
        "invoice_discount": {
          "type": "number",
          "readOnly": false
        },
        "invoice_discount_type": {
          "type": "string",
          "enum": [
            "percentage",
            "amount"
          ],
          "readOnly": false
        }
      },
      "required": [
        "item_type",
        "issue_date",
        "due_date",
        "currency"
      ]
    },
    "PurchaseBillDetailedForm": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "purchase_bills"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/PurchaseBillDetailedFormAttributes"
        },
        "relationships": {}
      },
      "required": [
        "attributes"
      ]
    },
    "SalaryAttributes": {
      "type": "object",
      "properties": {
        "total_paid": {
          "type": "number",
          "readOnly": true
        },
        "archived": {
          "type": "boolean",
          "readOnly": true
        },
        "remaining": {
          "type": "number",
          "readOnly": true
        },
        "remaining_in_trl": {
          "type": "number",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "readOnly": false
        },
        "currency": {
          "type": "string",
          "enum": [
            "TRL",
            "USD",
            "EUR",
            "GBP"
          ],
          "readOnly": false
        },
        "issue_date": {
          "type": "string",
          "format": "date",
          "readOnly": false
        },
        "due_date": {
          "type": "string",
          "format": "date",
          "readOnly": false
        },
        "exchange_rate": {
          "type": "number",
          "readOnly": false
        },
        "net_total": {
          "type": "number",
          "readOnly": false
        }
      },
      "required": [
        "description",
        "currency",
        "issue_date",
        "due_date",
        "net_total"
      ]
    },
    "Salary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "salaries"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/SalaryAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "employee": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "employees"
                      ]
                    }
                  }
                }
              }
            },
            "category": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "item_categories"
                      ]
                    }
                  }
                }
              }
            },
            "tags": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "tags"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "SalesInvoiceAttributes": {
      "type": "object",
      "properties": {
        "archived": {
          "type": "boolean",
          "readOnly": true
        },
        "invoice_no": {
          "type": "string",
          "readOnly": true,
          "description": "Fatura no"
        },
        "net_total": {
          "type": "number",
          "readOnly": true,
          "description": "Genel Toplam"
        },
        "gross_total": {
          "type": "number",
          "readOnly": true,
          "description": "Ara toplam"
        },
        "withholding": {
          "type": "number",
          "readOnly": true,
          "description": "Stopaj"
        },
        "total_excise_duty": {
          "type": "number",
          "readOnly": true
        },
        "total_communications_tax": {
          "type": "number",
          "readOnly": true
        },
        "total_vat": {
          "type": "number",
          "readOnly": true,
          "description": "Toplam KDV"
        },
        "vat_withholding": {
          "type": "number",
          "readOnly": true,
          "description": "Tevkifat"
        },
        "total_discount": {
          "type": "number",
          "readOnly": true,
          "description": "Toplam indirim"
        },
        "total_invoice_discount": {
          "type": "number",
          "readOnly": true
        },
        "before_taxes_total": {
          "type": "number",
          "readOnly": true,
          "description": "Vergiler Hariç Toplam"
        },
        "remaining": {
          "type": "number",
          "readOnly": true,
          "description": "Ödenmemiş tutar"
        },
        "remaining_in_trl": {
          "type": "number",
          "readOnly": true
        },
        "payment_status": {
          "type": "string",
          "enum": [
            "paid",
            "overdue",
            "unpaid",
            "partially_paid"
          ],
          "readOnly": true,
          "description": "Tahsilat durumu"
        },
        "created_at": {
          "type": "string",
          "format": "date",
          "readOnly": true,
          "description": "Kayıt tarihi"
        },
        "updated_at": {
          "type": "string",
          "format": "date",
          "readOnly": true,
          "description": "Son güncelleme tarihi"
        },
        "item_type": {
          "type": "string",
          "enum": [
            "invoice",
            "estimate",
            "cancelled",
            "recurring_invoice",
            "recurring_estimate",
            "refund"
          ],
          "readOnly": false,
          "description": "Fatura türü"
        },
        "description": {
          "type": "string",
          "readOnly": false,
          "description": "Fatura açıklaması"
        },
        "issue_date": {
          "type": "string",
          "format": "date",
          "readOnly": false,
          "description": "Düzenleme tarihi"
        },
        "due_date": {
          "type": "string",
          "format": "date",
          "readOnly": false,
          "description": "Son tahsilat tarihi"
        },
        "invoice_series": {
          "type": "string",
          "readOnly": false,
          "description": "Fatura seri"
        },
        "invoice_id": {
          "type": "integer",
          "readOnly": false,
          "description": "Fatura sıra"
        },
        "currency": {
          "type": "string",
          "enum": [
            "TRL",
            "USD",
            "EUR",
            "GBP"
          ],
          "readOnly": false,
          "description": "Döviz tipi"
        },
        "exchange_rate": {
          "type": "number",
          "readOnly": false,
          "description": "Döviz kuru"
        },
        "withholding_rate": {
          "type": "number",
          "readOnly": false,
          "description": "Stopaj oranı"
        },
        "vat_withholding_rate": {
          "type": "number",
          "readOnly": false,
          "description": "Tevkifat oranı"
        },
        "invoice_discount_type": {
          "type": "string",
          "enum": [
            "percentage",
            "amount"
          ],
          "readOnly": false
        },
        "invoice_discount": {
          "type": "number",
          "readOnly": false
        },
        "billing_address": {
          "type": "string",
          "readOnly": false,
          "description": "Gönderim adresi"
        },
        "billing_phone": {
          "type": "string",
          "readOnly": false,
          "description": "Gönderim adresi telefonu"
        },
        "billing_fax": {
          "type": "string",
          "readOnly": false,
          "description": "Gönderim adresi faksı"
        },
        "tax_office": {
          "type": "string",
          "readOnly": false,
          "description": "Müşteri vergi dairesi"
        },
        "tax_number": {
          "type": "string",
          "readOnly": false,
          "description": "Müşteri vergi numarası"
        },
        "city": {
          "type": "string",
          "readOnly": false
        },
        "district": {
          "type": "string",
          "readOnly": false
        },
        "is_abroad": {
          "type": "string",
          "readOnly": false
        },
        "order_no": {
          "type": "string",
          "readOnly": false
        },
        "order_date": {
          "type": "string",
          "format": "date",
          "readOnly": false
        },
        "shipment_addres": {
          "type": "string",
          "readOnly": false
        },
        "shipment_included": {
          "type": "boolean",
          "readOnly": false,
          "description": "İrsaliyeli fatura"
        }
      },
      "required": [
        "item_type",
        "issue_date"
      ]
    },
    "SalesInvoice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "sales_invoices"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/SalesInvoiceAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "category": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "item_categories"
                      ]
                    }
                  }
                }
              }
            },
            "contact": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "contacts"
                      ]
                    }
                  }
                }
              }
            },
            "details": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "sales_invoice_details"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "payments": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "payments"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "tags": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "tags"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "sales_offer": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "sales_offers"
                      ]
                    }
                  }
                }
              }
            },
            "sharings": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "sharings"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "recurrence_plan": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "recurrence_plans"
                      ]
                    }
                  }
                }
              }
            },
            "active_e_document": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "e_archives",
                        "e_invoices"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "SalesInvoiceDetailAttributes": {
      "type": "object",
      "properties": {
        "net_total": {
          "type": "number",
          "readOnly": true,
          "description": "Ürün/hizmet net tutarı"
        },
        "created_at": {
          "type": "string",
          "format": "date",
          "readOnly": true,
          "description": "Kayıt tarihi"
        },
        "updated_at": {
          "type": "string",
          "format": "date",
          "readOnly": true,
          "description": "Son güncelleme tarihi"
        },
        "quantity": {
          "type": "number",
          "readOnly": false,
          "description": "Miktar"
        },
        "unit_price": {
          "type": "number",
          "readOnly": false,
          "description": "Birim fiyatı"
        },
        "vat_rate": {
          "type": "number",
          "readOnly": false,
          "description": "KDV oranı"
        },
        "discount_type": {
          "type": "string",
          "enum": [
            "percentage",
            "amount"
          ],
          "readOnly": false,
          "description": "İndirim türü"
        },
        "discount_value": {
          "type": "number",
          "readOnly": false
        },
        "excise_duty_type": {
          "type": "string",
          "enum": [
            "percentage",
            "amount"
          ],
          "readOnly": false,
          "description": "ÖTV tipi"
        },
        "excise_duty_value": {
          "type": "number",
          "readOnly": false
        },
        "communications_tax_rate": {
          "type": "number",
          "readOnly": false,
          "description": "ÖİV oranı"
        },
        "description": {
          "type": "string",
          "readOnly": false,
          "description": "Açıklama"
        }
      },
      "required": [
        "quantity",
        "unit_price",
        "vat_rate"
      ]
    },
    "SalesInvoiceDetail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "sales_invoice_details"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/SalesInvoiceDetailAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "product": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "products"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "SalesOfferAttributes": {},
    "SalesOffer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "sales_offers"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/SalesOfferAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "sales_invoice": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "sales_invoices"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "ShipmentDocumentAttributes": {
      "type": "object",
      "properties": {
        "archived": {
          "type": "boolean",
          "readOnly": true,
          "description": "Arşivlenme durumu"
        },
        "invoice_no": {
          "type": "string",
          "readOnly": true,
          "description": "Yazdırmaya özel fatura numarası"
        },
        "print_note": {
          "type": "string",
          "readOnly": true,
          "description": "Yazdırmaya özel not"
        },
        "printed_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Yazdırılma tarihi"
        },
        "created_at": {
          "type": "string",
          "format": "date",
          "readOnly": true,
          "description": "Kayıt tarihi"
        },
        "updated_at": {
          "type": "string",
          "format": "date",
          "readOnly": true,
          "description": "Son güncelleme tarihi"
        },
        "inflow": {
          "type": "boolean",
          "readOnly": false,
          "description": "İrsaliye tipi"
        },
        "description": {
          "type": "string",
          "readOnly": false,
          "description": "İrsaliye açıklaması"
        },
        "city": {
          "type": "string",
          "readOnly": false,
          "description": "İl"
        },
        "district": {
          "type": "string",
          "readOnly": false,
          "description": "İlçe"
        },
        "address": {
          "type": "string",
          "readOnly": false,
          "description": "Adres"
        },
        "issue_date": {
          "type": "string",
          "format": "date",
          "readOnly": false,
          "description": "Düzenleme tarihi"
        },
        "shipment_date": {
          "type": "string",
          "format": "date-time",
          "readOnly": false,
          "description": "Fiili sevk tarihi"
        },
        "procurement_number": {
          "type": "string",
          "readOnly": false,
          "description": "İrsaliye Numarası"
        }
      },
      "required": [
        "issue_date"
      ]
    },
    "ShipmentDocument": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "shipment_documents"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/ShipmentDocumentAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "contact": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "contacts"
                      ]
                    }
                  }
                }
              }
            },
            "tags": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "tags"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "stock_movements": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "stock_movements"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "invoices": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "sales_invoices",
                          "purchase_bills"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "StockMovementAttributes": {
      "type": "object",
      "properties": {
        "detail_no": {
          "type": "number",
          "readOnly": true,
          "description": "Detay sıra no"
        },
        "date": {
          "type": "string",
          "format": "date",
          "readOnly": true,
          "description": "Hareket tarihi"
        },
        "created_at": {
          "type": "string",
          "format": "date",
          "readOnly": true,
          "description": "Kayıt tarihi"
        },
        "updated_at": {
          "type": "string",
          "format": "date",
          "readOnly": true,
          "description": "Son güncelleme tarihi"
        },
        "quantity": {
          "type": "number",
          "readOnly": false,
          "description": "Miktar"
        }
      },
      "required": [
        "quantity"
      ]
    },
    "StockMovement": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "stock_movements"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/StockMovementAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "product": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "products"
                      ]
                    }
                  }
                }
              }
            },
            "source": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "shipment_documents",
                        "sales_invoice_details",
                        "purchase_bill_details"
                      ]
                    }
                  }
                }
              }
            },
            "contact": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "contacts"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "TagAttributes": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": false,
          "description": "Etiket adı"
        }
      },
      "required": [
        "name"
      ]
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "tags"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/TagAttributes"
        },
        "relationships": {}
      },
      "required": [
        "attributes"
      ]
    },
    "TaxAttributes": {
      "type": "object",
      "properties": {
        "total_paid": {
          "type": "number",
          "readOnly": true
        },
        "archived": {
          "type": "boolean",
          "readOnly": true
        },
        "remaining": {
          "type": "number",
          "readOnly": true
        },
        "remaining_in_trl": {
          "type": "number",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "readOnly": false
        },
        "issue_date": {
          "type": "string",
          "format": "date",
          "readOnly": false
        },
        "due_date": {
          "type": "string",
          "format": "date",
          "readOnly": false
        },
        "net_total": {
          "type": "number",
          "readOnly": false
        }
      },
      "required": [
        "description",
        "issue_date",
        "due_date",
        "net_total"
      ]
    },
    "Tax": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "bank_fees"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/TaxAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "category": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "item_categories"
                      ]
                    }
                  }
                }
              }
            },
            "tags": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "tags"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "TrackableJobAttributes": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "running",
            "done",
            "error"
          ],
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "TrackableJob": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "trackable_jobs"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/TrackableJobAttributes"
        },
        "relationships": {}
      },
      "required": [
        "attributes"
      ]
    },
    "TransactionAttributes": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "readOnly": false,
          "description": "Açıklama"
        },
        "transaction_type": {
          "type": "string",
          "readOnly": false,
          "description": "İşlem türü"
        },
        "date": {
          "type": "string",
          "format": "date",
          "readOnly": false,
          "description": "Tarih"
        },
        "amount_in_trl": {
          "type": "number",
          "readOnly": false,
          "description": "TRL karşılığı meblağ"
        },
        "debit_amount": {
          "type": "number",
          "readOnly": false,
          "description": "Borç meblağ"
        },
        "debit_currency": {
          "type": "string",
          "enum": [
            "TRL",
            "USD",
            "EUR",
            "GBP"
          ],
          "readOnly": false,
          "description": "Borç döviz cinsi"
        },
        "credit_amount": {
          "type": "number",
          "readOnly": false,
          "description": "Alacak meblağ"
        },
        "credit_currency": {
          "type": "string",
          "enum": [
            "TRL",
            "USD",
            "EUR",
            "GBP"
          ],
          "readOnly": false,
          "description": "Alacak döviz cinsi"
        }
      }
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "transactions"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/TransactionAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "debit_account": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "accounts"
                      ]
                    }
                  }
                }
              }
            },
            "credit_account": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "accounts"
                      ]
                    }
                  }
                }
              }
            },
            "payments": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Type of the resource",
                        "enum": [
                          "payments"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    },
    "UserRoleAttributes": {
      "type": "object",
      "properties": {
        "sales_invoices": {
          "type": "string",
          "enum": [
            "rw",
            "ro",
            "na"
          ],
          "readOnly": true
        },
        "expenditures": {
          "type": "string",
          "enum": [
            "rw",
            "ro",
            "na"
          ],
          "readOnly": true
        },
        "own_expenditures": {
          "type": "string",
          "enum": [
            "rw",
            "ro",
            "na"
          ],
          "readOnly": true
        },
        "employees": {
          "type": "string",
          "enum": [
            "rw",
            "ro",
            "na"
          ],
          "readOnly": true
        },
        "accounts": {
          "type": "string",
          "enum": [
            "rw",
            "ro",
            "na"
          ],
          "readOnly": true
        },
        "settings": {
          "type": "string",
          "enum": [
            "rw",
            "ro",
            "na"
          ],
          "readOnly": true
        }
      }
    },
    "UserRole": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "maxLength": 255,
          "description": "Type of the resource",
          "enum": [
            "user_roles"
          ]
        },
        "attributes": {
          "$ref": "#/definitions/UserRoleAttributes"
        },
        "relationships": {
          "type": "object",
          "properties": {
            "company": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "companies"
                      ]
                    }
                  }
                }
              }
            },
            "user": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "users"
                      ]
                    }
                  }
                }
              }
            },
            "managed_employee": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Type of the resource",
                      "enum": [
                        "employees"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "attributes"
      ]
    }
  }
}
